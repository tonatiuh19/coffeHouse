{"version":3,"sources":["logo.svg","resources/images/logo.png","components/Login.jsx","utilities/Loading.jsx","api/functionApis.jsx","components/content/Products.jsx","components/content/Start.jsx","components/content/Packs.jsx","components/content/Welcome.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Login","useState","email","setEmail","password","setPassword","erroMessage","setErrorMessage","error","setError","loading","setLoading","history","useHistory","signInValidation","test","String","toLowerCase","validateEmail","signIn","then","x","undefined","localStorage","setItem","push","finally","a","axios","post","pwd","response","data","console","log","useEffect","getItem","className","href","src","Logo","alt","type","placeholder","onChange","e","target","value","role","onClick","style","display","justifyContent","alignItems","icon","faCoffee","pulse","Loading","size","getUserProducts","userEmail","getCountries","getTypesProducts","updateProducs","emailUser","name","description","descriptionLong","idCountry","price","quantity","idProduct","idProductType","acidezType","cuerpoType","saborType","replace","long_description","id_country","id_products","id_product_type","id_product_f_acidez_types","id_product_f_cuerpo_types","id_product_f_sabor_types","newProduct","deactivateProduct","getProductImage","getCountUserProducts","getUserPacks","newPack","newPackProductsIds","idCampaign","id_campaign","getPacksUserProductsIds","updatePack","Products","products","setProducts","countries","setCountries","productTypes","setProductTypes","noProducts","setNoProducts","loadingEdit","setLoadingEdit","showEdit","setShowEdit","titleEdit","setTitleEdit","nameEdit","setNameEdit","descriptionEdit","setDescriptionEdit","descriptionLongEdit","setLongDescriptionEdit","idCountryEdit","setIdCountryEdit","priceEdit","setPriceEdit","quantityEdit","setQuantityEdit","idProductEdit","setIdProductEdit","idProductTypeEdit","setIdProductTypeEdit","productSaborEdit","setProductSaborEdit","productCuerpoEdit","setProductCuerpoEdit","productAcidezEdit","setProductAcidezEdit","nameEditValidation","setNameEditValidation","descriptionEditValidation","setDescriptionEditValidation","descriptionLongEditValidation","setLongDescriptionEditValidation","priceEditValidation","setPriceEditValidation","quantityEditValidation","setQuantityEditValidation","loadingNew","setLoadingNew","formValidated","setFormValidated","showNew","setShowNew","titleNew","nameNew","setNameNew","descriptionNew","setDescriptionNew","descriptionLongNew","setLongDescriptionNew","idCountryNew","setIdCountryNew","priceNew","setPriceNew","quantityNew","setQuantityNew","idProductTypeNew","setIdProductTypeNew","productSaborNew","setProductSaborNew","productCuerpoNew","setProductCuerpoNew","productAcidezNew","setProductAcidezNew","newProductItem","setNewProductItem","nameNewValidation","setNameNewValidation","descriptionNewValidation","setDescriptionNewValidation","descriptionLongNewValidation","setLongDescriptionNewValidation","priceNewValidation","setPriceNewValidation","quantityNewValidation","setQuantityNewValidation","showCancel","setShowCancel","idProductDelete","setIdProductDelete","showImage","setShowImage","productImage","setProductImage","loadingImage","setLoadingImage","preview","raw","image","setImage","idProductImage","setIdProductImage","errorImage","setErrorImage","errorImageText","setErrorImageText","showAlertImgNew","setShowAlertImgNew","handleCloseNew","handleShowNew","sendNewForm","getUser","handleCloseEdit","sendEditForm","handleShowEditImage","item","decode_utf8","handleCloseImgNew","handleCloseImage","handleCloseCancel","handleUploadImage","preventDefault","formData","FormData","append","headers","res","status","catch","s","decodeURIComponent","escape","acidezTypes","Modal","show","onHide","backdrop","keyboard","Header","closeButton","Title","Footer","Button","variant","Body","Form","Group","controlId","Label","Control","required","class","as","defaultValue","InputGroup","hasValidation","Prepend","Text","id","map","Object","keys","rows","country","selected","width","htmlFor","height","files","length","URL","createObjectURL","scope","index","active","faExclamationTriangle","y","handleShowEdit","faPencilAlt","faImage","handleShowCancel","faTrashAlt","Start","Packs","noPacks","setNoPacks","packs","setPacks","productsCount","setProductsCount","productsToAdd","setProductsToAdd","titleModal","setTitleModal","longDescriptionNew","productPack","setProductPack","newPackItem","setNewPackItem","setDescriptionLongNewValidation","stockEmpty","setStockEmpty","longDescriptionEdit","productPackEdit","setProductPackEdit","idPack","setIdPack","formValidatedEdit","setFormValidatedEdit","setDescriptionLongEditValidation","stockEmptyEdit","setStockEmptyEdit","key","validated","stock","validateEditForm","Promise","all","promisesProductsPack","results","promises","validateNewForm","validateQuantity","prd","Number","addProducts","idProducts","split","count","Row","Col","sm","max","prdAdd","keyy","Welcome","user","setUser","fullName","setFullName","errorMessage","loggedInUser","getUserData","last_name","faTools","data-toggle","data-target","aria-controls","aria-expanded","aria-label","to","clear","data-placement","title","faPowerOff","minHeight","paddingTop","path","App","document","basename","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"wOAAe,I,mCCAA,G,MAAA,IAA0B,kC,gDCkH1BA,EA1GD,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEgBF,mBAAS,IAFzB,mBAETG,EAFS,KAECC,EAFD,OAGuBJ,mBAAS,IAHhC,mBAGTK,EAHS,KAGIC,EAHJ,OAIUN,oBAAS,GAJnB,mBAITO,EAJS,KAIFC,EAJE,OAKcR,oBAAS,GALvB,mBAKTS,EALS,KAKAC,EALA,OAMQV,mBAAS,IANjB,mBAOVW,GAPU,UAOAC,eAEVC,EAAmB,WACR,KAAVZ,GAA6B,KAAbE,GACfK,GAAS,GACTF,EAAgB,iDA0CxB,SAAuBL,GAEnB,MADW,wJACDa,KAAKC,OAAOd,GAAOe,eA1CtBC,CAAchB,IAWbO,GAAS,GACTF,EAAgB,6BAXhBE,GAAS,GACTE,GAAW,GACXQ,IAASC,MAAK,SAACC,QACFC,IAAND,IAECE,aAAaC,QAAQ,WAAYH,EAAE,GAAGnB,OACtCU,EAAQa,KAAK,mBAElBC,SAAQ,kBAAMf,GAAW,QASlCQ,EAAM,uCAAG,4BAAAQ,EAAA,+EAEgBC,IAAMC,KAAK,qDAC9B,CACI3B,MAAOA,EACP4B,IAAK1B,IALN,UAQc,KANf2B,EAFC,QAQKC,KARL,gBASHvB,GAAS,GACTF,EAAgB,qCAVb,8BAYHE,GAAS,GAZN,kBAaIsB,EAASC,MAbb,0DAgBPvB,GAAS,GACTF,EAAgB,gCAAD,cACf0B,QAAQC,IAAR,8CAlBO,0DAAH,qDAuCZ,OALAC,qBAAU,WANeZ,aAAaa,QAAQ,aAEtCxB,EAAQa,KAAK,iBAOlB,IAGC,qBAAKY,UAAU,MAAf,SACI,qBAAKA,UAAU,eAAf,SACI,qBAAKA,UAAU,aAAf,SACI,gCACI,mBAAGC,KAAK,4BAAR,SACI,qBAAKC,IAAKC,EAAMH,UAAU,YAAYI,IAAI,uBAE9C,uBAEA,qBAAKJ,UAAU,aAAf,SACI,uBAAOK,KAAK,QAAQL,UAAU,eAAeM,YAAY,qBAAqBC,SAAU,SAACC,GAAD,OAAO1C,EAAS0C,EAAEC,OAAOC,QAAQA,MAAO7C,MAGpI,qBAAKmC,UAAU,aAAf,SACI,uBAAOK,KAAK,WAAWL,UAAU,eAAeM,YAAY,gBAAaC,SAAU,SAACC,GAAD,OAAOxC,EAAYwC,EAAEC,OAAOC,QAAQA,MAAO3C,MAEjII,EAAS,qBAAK6B,UAAU,qBAAqBW,KAAK,QAAzC,SAAkD1C,IAAsB,KAClF,wBAAQoC,KAAK,SAASL,UAAU,4BAA4BY,QAAS,kBAAMnC,KAA3E,oBACA,mBAAGuB,UAAU,+BAGZ3B,EACA,qBAAKwC,MAAO,CAACC,QAAS,OAASC,eAAe,SAAUC,WAAW,UAAnE,SACG,cAAC,IAAD,CAAiBC,KAAMC,IAAUC,OAAK,MAExC,e,QC5FXC,G,YARC,WACZ,OACI,qBAAKpB,UAAU,cAAf,SACI,cAAC,IAAD,CAAiBiB,KAAMC,IAAUG,KAAK,KAAKF,OAAK,Q,gCCa/CG,EAAe,uCAAG,WAAOC,GAAP,eAAAjC,EAAA,+EAEAC,IAAMC,KAAK,+DAC9B,CACI3B,MAAO0D,IAJQ,cAEjB7B,EAFiB,yBAOhBA,EAASC,MAPO,gKAAH,sDAaf6B,EAAY,uCAAG,4BAAAlC,EAAA,+EAEGC,IAAMC,KAAK,6DAFd,cAEdE,EAFc,yBAGbA,EAASC,MAHI,gKAAH,qDASZ8B,EAAgB,uCAAG,4BAAAnC,EAAA,+EAEDC,IAAMC,KAAK,iEAFV,cAElBE,EAFkB,yBAGjBA,EAASC,MAHQ,gKAAH,qDAShB+B,EAAa,uCAAG,WAAOC,EAAWC,EAAMC,EAAaC,EAAiBC,EAAWC,EAAOC,EAAUC,EAAWC,EAAeC,EAAYC,EAAYC,GAApI,eAAAhD,EAAA,+EAEEC,IAAMC,KAAK,kEAC9B,CACI3B,MAAO8D,EACPC,KAAMA,EACNC,YAAaA,EAAYU,QAAQ,SAAU,IAC3CC,iBAAkBV,EAAgBS,QAAQ,SAAU,IACpDE,WAAYV,EACZC,MAAOA,EACPC,SAAUA,EACVS,YAAaR,EACbS,gBAAiBR,EACjBS,0BAA2BR,EAC3BS,0BAA2BR,EAC3BS,yBAA0BR,IAfb,cAEf5C,EAFe,yBAkBdA,EAASC,MAlBK,gKAAH,4EAwBboD,EAAU,uCAAG,WAAOpB,EAAWC,EAAMC,EAAaM,EAAeJ,EAAWD,EAAiBG,EAAUD,EAAOI,EAAYC,EAAYC,GAAzH,eAAAhD,EAAA,+EAEKC,IAAMC,KAAK,gEAC9B,CACI3B,MAAO8D,EACPC,KAAMA,EACNC,YAAaA,EAAYU,QAAQ,SAAU,IAC3CI,gBAAiBR,EACjBM,WAAYV,EACZS,iBAAkBV,EAAgBS,QAAQ,SAAU,IACpDN,SAAUA,EACVD,MAAOA,EACPY,0BAA2BR,EAC3BS,0BAA2BR,EAC3BS,yBAA0BR,IAdhB,cAEZ5C,EAFY,yBAiBXA,EAASC,MAjBE,gKAAH,0EAuBVqD,EAAiB,uCAAG,WAAOd,GAAP,eAAA5C,EAAA,+EAEFC,IAAMC,KAAK,iEAC9B,CACIkD,YAAaR,IAJI,cAEnBxC,EAFmB,yBAOlBA,EAASC,MAPS,gKAAH,sDAajBsD,EAAe,uCAAG,WAAOf,GAAP,eAAA5C,EAAA,+EAEAC,IAAMC,KAAK,uDAC9B,CACIkD,YAAaR,IAJE,cAEjBxC,EAFiB,yBAOhBA,EAASC,MAPO,gKAAH,sDA2BfuD,EAAoB,uCAAG,WAAO3B,GAAP,eAAAjC,EAAA,+EAELC,IAAMC,KAAK,mEAC9B,CACI3B,MAAO0D,IAJa,cAEtB7B,EAFsB,yBAOrBA,EAASC,MAPY,gKAAH,sDAapBwD,EAAY,uCAAG,WAAO5B,GAAP,eAAAjC,EAAA,+EAEGC,IAAMC,KAAK,4DAC9B,CACI3B,MAAO0D,IAJK,cAEd7B,EAFc,yBAObA,EAASC,MAPI,gKAAH,sDAaZyD,EAAO,uCAAG,WAAOzB,EAAWC,EAAMC,EAAaC,EAAiBG,EAAUD,GAAhE,eAAA1C,EAAA,+EAEQC,IAAMC,KAAK,0DAC9B,CACI3B,MAAO8D,EACPC,KAAMA,EACNC,YAAaA,EAAYU,QAAQ,SAAU,IAC3CC,iBAAkBV,EAAgBS,QAAQ,SAAU,IACpDN,SAAUA,EACVD,MAAOA,IATA,cAETtC,EAFS,yBAYRA,EAASC,MAZD,gKAAH,gEAkBP0D,EAAkB,uCAAG,WAAOnB,EAAWoB,EAAYrB,GAA9B,eAAA3C,EAAA,+EAEHC,IAAMC,KAAK,oEAC9B,CACIkD,YAAaR,EACbqB,YAAaD,EACbrB,SAAUA,IANQ,cAEpBvC,EAFoB,yBASnBA,EAASC,MATU,gKAAH,0DAelB6D,EAAuB,uCAAG,WAAOtB,GAAP,eAAA5C,EAAA,+EAERC,IAAMC,KAAK,uEAC9B,CACIkD,YAAaR,IAJU,cAEzBxC,EAFyB,yBAOxBA,EAASC,MAPe,gKAAH,sDAavB8D,EAAU,uCAAG,WAAO9B,EAAWO,EAAWN,EAAMC,EAAaC,EAAiBG,EAAUD,GAA3E,eAAA1C,EAAA,+EAEKC,IAAMC,KAAK,0DAC9B,CACI3B,MAAO8D,EACPe,YAAaR,EACbN,KAAMA,EACNC,YAAaA,EAAYU,QAAQ,SAAU,IAC3CC,iBAAkBV,EAAgBS,QAAQ,SAAU,IACpDN,SAAUA,EACVD,MAAOA,IAVG,cAEZtC,EAFY,yBAaXA,EAASC,MAbE,gKAAH,kECghBR+D,EA1tBE,WACGlF,cAAhB,IADmB,EAEWZ,oBAAS,GAFpB,mBAEZS,EAFY,KAEHC,EAFG,OAGaV,mBAAS,IAHtB,mBAGZ+F,EAHY,KAGFC,EAHE,OAIehG,mBAAS,IAJxB,mBAIZiG,EAJY,KAIDC,EAJC,OAKqBlG,mBAAS,IAL9B,mBAKZmG,EALY,KAKEC,EALF,OAMiBpG,oBAAS,GAN1B,mBAMZqG,EANY,KAMAC,EANA,OAQKtG,mBAAS,IARd,gCASOA,oBAAS,IAThB,gCAUoBA,mBAAS,KAV7B,gCAamBA,oBAAS,IAb5B,mBAaZuG,EAbY,KAaCC,EAbD,OAcaxG,oBAAS,GAdtB,mBAcZyG,EAdY,KAcFC,GAdE,QAee1G,mBAAS,IAfxB,qBAeZ2G,GAfY,MAeDC,GAfC,SAgBa5G,mBAAS,IAhBtB,qBAgBZ6G,GAhBY,MAgBFC,GAhBE,SAiB2B9G,mBAAS,IAjBpC,qBAiBZ+G,GAjBY,MAiBKC,GAjBL,SAkBmChH,mBAAS,IAlB5C,qBAkBZiH,GAlBY,MAkBSC,GAlBT,SAmBuBlH,mBAAS,GAnBhC,qBAmBZmH,GAnBY,MAmBGC,GAnBH,SAoBepH,mBAAS,IApBxB,qBAoBZqH,GApBY,MAoBDC,GApBC,SAqBqBtH,mBAAS,GArB9B,qBAqBZuH,GArBY,MAqBEC,GArBF,SAsBuBxH,mBAAS,GAtBhC,qBAsBZyH,GAtBY,MAsBGC,GAtBH,SAuB+B1H,mBAAS,GAvBxC,qBAuBZ2H,GAvBY,MAuBOC,GAvBP,SAwB6B5H,mBAAS,GAxBtC,qBAwBZ6H,GAxBY,MAwBMC,GAxBN,SAyB+B9H,mBAAS,GAzBxC,qBAyBZ+H,GAzBY,MAyBOC,GAzBP,SA0B+BhI,mBAAS,GA1BxC,qBA0BZiI,GA1BY,MA0BOC,GA1BP,SA4BiClI,oBAAS,GA5B1C,qBA4BZmI,GA5BY,MA4BQC,GA5BR,SA6B+CpI,oBAAS,GA7BxD,qBA6BZqI,GA7BY,MA6BeC,GA7Bf,SA8BuDtI,oBAAS,GA9BhE,qBA8BZuI,GA9BY,MA8BmBC,GA9BnB,SA+BmCxI,oBAAS,GA/B5C,qBA+BZyI,GA/BY,MA+BSC,GA/BT,SAgCyC1I,oBAAS,GAhClD,qBAgCZ2I,GAhCY,MAgCYC,GAhCZ,SAmCiB5I,oBAAS,GAnC1B,qBAmCZ6I,GAnCY,MAmCAC,GAnCA,SAoCuB9I,oBAAS,GApChC,qBAoCZ+I,GApCY,MAoCGC,GApCH,SAqCWhJ,oBAAS,GArCpB,qBAqCZiJ,GArCY,MAqCHC,GArCG,SAsCalJ,mBAAS,kBAtCtB,qBAsCZmJ,GAtCY,gBAuCWnJ,mBAAS,KAvCpB,qBAuCZoJ,GAvCY,MAuCHC,GAvCG,SAwCyBrJ,mBAAS,IAxClC,qBAwCZsJ,GAxCY,MAwCIC,GAxCJ,SAyCiCvJ,mBAAS,IAzC1C,qBAyCZwJ,GAzCY,MAyCQC,GAzCR,SA0CqBzJ,mBAAS,GA1C9B,qBA0CZ0J,GA1CY,MA0CEC,GA1CF,SA2Ca3J,mBAAS,IA3CtB,qBA2CZ4J,GA3CY,MA2CFC,GA3CE,SA4CmB7J,mBAAS,GA5C5B,qBA4CZ8J,GA5CY,MA4CCC,GA5CD,SA6CqB/J,mBAAS,GA7C9B,qCA8C6BA,mBAAS,IA9CtC,qBA8CZgK,GA9CY,MA8CMC,GA9CN,SA+C2BjK,mBAAS,GA/CpC,qBA+CZkK,GA/CY,MA+CKC,GA/CL,SAgD6BnK,mBAAS,GAhDtC,qBAgDZoK,GAhDY,MAgDMC,GAhDN,SAiD6BrK,mBAAS,GAjDtC,qBAiDZsK,GAjDY,MAiDMC,GAjDN,SAkDyBvK,mBAAS,IAlDlC,qBAkDZwK,GAlDY,MAkDIC,GAlDJ,SAoD+BzK,oBAAS,GApDxC,qBAoDZ0K,GApDY,MAoDOC,GApDP,SAqD6C3K,oBAAS,GArDtD,qBAqDZ4K,GArDY,MAqDcC,GArDd,SAsDqD7K,oBAAS,GAtD9D,qBAsDZ8K,GAtDY,MAsDkBC,GAtDlB,SAuDiC/K,oBAAS,GAvD1C,qBAuDZgL,GAvDY,MAuDQC,GAvDR,SAwDuCjL,oBAAS,GAxDhD,qBAwDZkL,GAxDY,MAwDWC,GAxDX,SA2DiBnL,oBAAS,GA3D1B,qBA2DZoL,GA3DY,MA2DAC,GA3DA,SA4D2BrL,mBAAS,GA5DpC,qBA4DZsL,GA5DY,MA4DKC,GA5DL,SA+DevL,oBAAS,GA/DxB,qBA+DZwL,GA/DY,MA+DDC,GA/DC,SAgEqBzL,mBAAS,IAhE9B,qBAgEZ0L,GAhEY,MAgEEC,GAhEF,SAiEqB3L,oBAAS,GAjE9B,qBAiEZ4L,GAjEY,MAiEEC,GAjEF,SAkEO7L,mBAAS,CAAE8L,QAAS,GAAIC,IAAK,KAlEpC,qBAkEZC,GAlEY,MAkELC,GAlEK,SAmEyBjM,mBAAS,GAnElC,qBAmEZkM,GAnEY,MAmEIC,GAnEJ,SAoEiBnM,oBAAS,GApE1B,qBAoEZoM,GApEY,MAoEAC,GApEA,SAqEyBrM,mBAAS,SArElC,qBAqEZsM,GArEY,MAqEIC,GArEJ,SAwE2BvM,oBAAS,GAxEpC,qBAwEZwM,GAxEY,MAwEKC,GAxEL,MA0EbC,GAAiB,kBAAMxD,IAAW,IAElCyD,GAAgB,WAClBtD,GAAW,IACXE,GAAkB,IAClBE,GAAsB,IACtBI,GAAY,IACZE,GAAe,GACfjB,IAAc,GACdI,IAAW,GACXtF,IAAezC,MAAK,SAACC,GACjB8E,EAAa9E,GACbyC,IAAmB1C,MAAK,SAACC,GACrBgF,EAAgBhF,SAErBK,SAAQ,WAAOqH,IAAc,OA2C9B8D,GAAc,YAvCD,KAAZxD,IACCuB,IAAqB,GACrB3B,IAAiB,GACV,IAEP2B,IAAqB,GAEH,KAAnBrB,IACCuB,IAA4B,GAC5B7B,IAAiB,GACV,IAEP6B,IAA4B,GAEN,KAAvBrB,IACCuB,IAAgC,GAChC/B,IAAiB,GACV,IAEP+B,IAAgC,GAEpB,KAAbnB,IAA+B,GAAZA,IAClBqB,IAAsB,GACtBjC,IAAiB,GACV,IAEPiC,IAAsB,GAEP,KAAhBnB,IAAqC,GAAfA,IACrBqB,IAAyB,GACzBnC,IAAiB,GACV,IAEPmC,IAAyB,GAE7BnC,IAAiB,GACV,UAKHE,IAAW,GACXxI,GAAW,GACXyE,EAAW0H,KAAWzD,GAASE,GAAgBU,GAAkBN,GAAcF,GAAoBM,GAAaF,GAAUU,GAAkBF,GAAkBF,IAAiB/I,MAAK,SAACC,GACjLsC,EAAgBmJ,MAAW1L,MAAK,SAACC,GACpB,eAANA,GACCkF,GAAc,GACdN,EAAY5E,IAEZkF,GAAc,MAEnB7E,SAAQ,WACPf,GAAW,GACX+J,GAAkBrJ,EAAE,IACpBqL,IAAmB,WAM7BK,GAAkB,kBAAMpG,IAAY,IA4DpCqG,GAAe,YAjCD,KAAblG,IACCuB,IAAsB,GACf,IAEPA,IAAsB,GAEH,KAApBrB,IACCuB,IAA6B,GACtB,IAEPA,IAA6B,GAEN,KAAxBrB,IACCuB,IAAiC,GAC1B,IAEPA,IAAiC,GAEpB,KAAdnB,IAAiC,GAAbA,IACnBqB,IAAuB,GAChB,IAEPA,IAAuB,GAEP,KAAjBnB,IAAuC,GAAhBA,IACtBqB,IAA0B,GACnB,IAEPA,IAA0B,GAEvB,UAKHlC,IAAY,GACZhG,GAAW,GACXoD,EAAc+I,KAAWhG,GAAUE,GAAiBE,GAAqBE,GAAeE,GAAWE,GAAcE,GAAeE,GAAmBM,GAAmBF,GAAmBF,IAAkB1G,MAAK,WAC5MuC,EAAgBmJ,MAAW1L,MAAK,SAACC,GACpB,eAANA,GACCkF,GAAc,GACdN,EAAY5E,IAEZkF,GAAc,MAEnB7E,SAAQ,kBAAMf,GAAW,WAKlCsM,GAAsB,SAACC,GACzBrG,GAAa,IAAIqG,EAAKnI,YAAT,MAAiCoI,GAAYD,EAAKjJ,OAC/DiI,GAAS,CAAEH,QAAS,GAAIC,IAAK,KAC7BN,IAAa,GACbI,IAAgB,GAChBM,GAAkBc,EAAKnI,aACvBO,EAAgB4H,EAAKnI,aAAa3D,MAAK,SAACC,GAAD,OAAOuK,GAAgBvK,MAAIK,SAAQ,kBAAMoK,IAAgB,OAG9FsB,GAAoB,kBAAMV,IAAmB,IAE7CW,GAAmB,kBAAM3B,IAAa,IAEtC4B,GAAoB,kBAAMhC,IAAc,IAsBxCwB,GAAU,WAEZ,OADqBvL,aAAaa,QAAQ,aAaxCmL,GAAiB,uCAAG,WAAM1K,GAAN,eAAAlB,EAAA,sDACtBkB,EAAE2K,iBACF1B,IAAgB,IACV2B,EAAW,IAAIC,UACZC,OAAO,SAAU1B,GAAMD,KAChCyB,EAASE,OAAO,cAAexB,IAE/BvK,IAAMC,KAAM,0DACV4L,EACA,CACEG,QAAS,CACL,eAAgB,yBAGtBxM,MAAK,SAASyM,GAEQ,GAAnBA,EAAI7L,KAAK8L,OACVnK,EAAgBmJ,MAAW1L,MAAK,SAACC,GAAD,OAAO4E,EAAY5E,MAAIK,SAAQ,WAC3DoK,IAAgB,GAChBJ,IAAa,MAES,GAAnBmC,EAAI7L,KAAK8L,QAChBhC,IAAgB,GAChBQ,IAAc,GACdE,GAAkB,uCACQ,GAAnBqB,EAAI7L,KAAK8L,SAChBhC,IAAgB,GAChBQ,IAAc,GACdE,GAAkB,0CAGrBuB,OAAM,WACL9L,QAAQC,IAAI,gBAhCQ,2CAAH,sDAgDvB,SAASiL,GAAYa,GACjB,OAAOC,mBAAmBC,OAAOF,IAbrC7L,qBAAU,WACNwB,EAAgBmJ,MAAW1L,MAAK,SAACC,GACpB,eAANA,GACCkF,GAAc,GACdN,EAAY5E,IAEZkF,GAAc,MAEnB7E,SAAQ,kBAAMf,GAAW,QAC7B,IAOH,IAAMwN,GAAc,SAAC9M,GACjB,MAAQ,KAALA,EACQ,kBACG,KAALA,EACE,sBAEJA,GAGX,OACI,8BACKX,EACA,cAAC,EAAD,IACA,sBAAK2B,UAAU,OAAf,UACG,eAAC+L,EAAA,EAAD,CACIC,KAAM5B,GACN6B,OAAQlB,GACRmB,SAAS,SACTC,UAAU,EAJd,UAKI,cAACJ,EAAA,EAAMK,OAAP,CAAcC,aAAW,EAAzB,SACC,cAACN,EAAA,EAAMO,MAAP,6GAED,eAACP,EAAA,EAAMQ,OAAP,WACI,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAY7L,QAASmK,GAArC,qBAGA,cAACyB,EAAA,EAAD,CAAQC,QAAQ,UAAU7L,QAAS,WAC/ByJ,IAAmB,GACnBO,GAAoBxC,KAFxB,gCASR,eAAC2D,EAAA,EAAD,CACIC,KAAMnF,GACNxF,KAAK,KACL4K,OAAQ3B,GACR4B,SAAS,SACTC,UAAU,EALd,UAOI,cAACJ,EAAA,EAAMK,OAAP,CAAcC,aAAW,EAAzB,SACY,cAACN,EAAA,EAAMO,MAAP,UAAcvF,OAE1B,cAACgF,EAAA,EAAMW,KAAP,UACKjG,GAAc,cAAC,EAAD,IACd,eAACkG,EAAA,EAAD,WACG,eAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,4BAAtB,UACI,cAACF,EAAA,EAAKG,MAAN,kCACA,cAACH,EAAA,EAAKI,QAAN,CAAcC,UAAQ,EAAC3M,KAAK,OAAOC,YAAY,+BAA+BC,SAAU,SAAAC,GAAMyG,GAAWzG,EAAEC,OAAOC,UACjH4H,GAAqB,qBAAK2E,MAAM,yBAAyBtM,KAAK,QAAzC,yCAAsF,QAEhH,eAACgM,EAAA,EAAKC,MAAN,CAAYC,UAAU,6BAAtB,UACI,cAACF,EAAA,EAAKG,MAAN,+BACA,eAACH,EAAA,EAAKI,QAAN,CAAcC,UAAQ,EAACE,GAAG,SAASC,aAAa,IAAI5M,SAAU,SAAAC,GAAMqH,GAAoBrH,EAAEC,OAAOC,QAAjG,UACI,wBAAQA,MAAM,IAAd,mBACA,wBAAQA,MAAM,IAAd,6BAGR,eAACiM,EAAA,EAAKC,MAAN,CAAYC,UAAU,2BAAtB,UACI,cAACF,EAAA,EAAKG,MAAN,qBACA,eAACM,EAAA,EAAD,CAAYC,eAAa,EAAzB,UACI,cAACD,EAAA,EAAWE,QAAZ,UACI,cAACF,EAAA,EAAWG,KAAZ,CAAiBC,GAAG,oBAApB,iBAEJ,cAACb,EAAA,EAAKI,QAAN,CACIC,UAAQ,EACR1M,YAAY,MACZD,KAAK,SACLE,SAAU,SAAAC,GAAMiH,GAAYjH,EAAEC,OAAOC,aAG5CkI,GAAsB,qBAAKqE,MAAM,yBAAyBtM,KAAK,QAAzC,mDAAgG,QAE3H,eAACgM,EAAA,EAAKC,MAAN,CAAYC,UAAU,4BAAtB,UACI,cAACF,EAAA,EAAKG,MAAN,oBACA,cAACH,EAAA,EAAKI,QAAN,CAAcC,UAAQ,EAAC3M,KAAK,SAASC,YAAY,MAAMC,SAAU,SAAAC,GAAMmH,GAAenH,EAAEC,OAAOC,UAC9FoI,GAAyB,qBAAKmE,MAAM,yBAAyBtM,KAAK,QAAzC,+CAA4F,QAErG,GAApBiH,GACA,qCACG,eAAC+E,EAAA,EAAKC,MAAN,CAAYC,UAAU,6BAAtB,UACI,cAACF,EAAA,EAAKG,MAAN,qBACA,cAACH,EAAA,EAAKI,QAAN,CAAcC,UAAQ,EAACE,GAAG,SAASC,aAAc,EAAG5M,SAAU,SAAAC,GAAMyH,GAAoBzH,EAAEC,OAAOC,QAAjG,SACKqD,EAAa0J,KAAI,SAACzO,GACf,GAAyB,8BAAtB0O,OAAOC,KAAK3O,GAAG,GACd,OAAQ,wBAAQ0B,MAAO1B,EAAE6D,0BAAjB,SAA+EiI,GAAY9L,EAAE0B,QAA5C1B,EAAE6D,mCAM3E,eAAC8J,EAAA,EAAKC,MAAN,CAAYC,UAAU,6BAAtB,UACI,cAACF,EAAA,EAAKG,MAAN,oBACA,cAACH,EAAA,EAAKI,QAAN,CAAcC,UAAQ,EAACE,GAAG,SAASC,aAAc,EAAG5M,SAAU,SAAAC,GAAMuH,GAAmBvH,EAAEC,OAAOC,QAAhG,SACKqD,EAAa0J,KAAI,SAACzO,GACf,GAAyB,6BAAtB0O,OAAOC,KAAK3O,GAAG,GACd,OAAQ,wBAAQ0B,MAAO1B,EAAE8D,yBAAjB,SAA6EgI,GAAY9L,EAAE0B,QAA3C1B,EAAE8D,kCAK1E,eAAC6J,EAAA,EAAKC,MAAN,CAAYC,UAAU,6BAAtB,UACI,cAACF,EAAA,EAAKG,MAAN,qBACA,cAACH,EAAA,EAAKI,QAAN,CAAcC,UAAQ,EAACE,GAAG,SAASC,aAAc,EAAG5M,SAAU,SAAAC,GAAM2H,GAAoB3H,EAAEC,OAAOC,QAAjG,SACKqD,EAAa0J,KAAI,SAACzO,GACf,GAAyB,8BAAtB0O,OAAOC,KAAK3O,GAAG,GACd,OAAQ,wBAAQ0B,MAAO1B,EAAE4D,0BAAjB,SACHkJ,GAAY9M,EAAE0B,QADsC1B,EAAE4D,sCAQ7E,KAEF,eAAC+J,EAAA,EAAKC,MAAN,CAAYC,UAAU,4BAAtB,UACI,cAACF,EAAA,EAAKG,MAAN,gDACA,cAACH,EAAA,EAAKI,QAAN,CAAcC,UAAQ,EAACE,GAAG,WAAW5M,YAAY,4EAA4EsN,KAAM,EAAGT,aAAcjG,GAAgB3G,SAAU,SAAAC,GAAM2G,GAAkB3G,EAAEC,OAAOC,UAC9M8H,GAA4B,qBAAKyE,MAAM,yBAAyBtM,KAAK,QAAzC,+CAA4F,QAE7H,eAACgM,EAAA,EAAKC,MAAN,CAAYC,UAAU,4BAAtB,UACI,cAACF,EAAA,EAAKG,MAAN,gDACA,cAACH,EAAA,EAAKI,QAAN,CAAcC,UAAQ,EAACE,GAAG,WAAWU,KAAM,EAAGtN,YAAY,oCAAoC6M,aAAc/F,GAAoB7G,SAAU,SAAAC,GAAM6G,GAAsB7G,EAAEC,OAAOC,UAC9KgI,GAAgC,qBAAKuE,MAAM,yBAAyBtM,KAAK,QAAzC,0DAAuG,QAE5I,eAACgM,EAAA,EAAKC,MAAN,CAAYC,UAAU,6BAAtB,UACI,cAACF,EAAA,EAAKG,MAAN,mBACA,cAACH,EAAA,EAAKI,QAAN,CAAcC,UAAQ,EAACE,GAAG,SAASC,aAAc,EAAG5M,SAAU,SAAAC,GAAM+G,GAAgB/G,EAAEC,OAAOC,QAA7F,SACKmD,EAAU4J,KAAI,SAACzO,GACZ,OAAQ,wBAAQ0B,MAAO1B,EAAEyD,WAAjB,SAAiDqI,GAAY9L,EAAE6O,UAA7B7O,EAAEyD,yBAMhE,eAACsJ,EAAA,EAAMQ,OAAP,WACK5F,GAAiB,qBAAKsG,MAAM,yBAAyBtM,KAAK,QAAzC,kDAA+F,KACjH,cAAC6L,EAAA,EAAD,CAAQC,QAAQ,YAAY7L,QAAS0J,GAArC,sBAGA,cAACkC,EAAA,EAAD,CAAQC,QAAQ,UAAU7L,QAAS,kBAAM4J,MAAzC,mCAIR,eAACuB,EAAA,EAAD,CACIC,KAAM3H,EACNhD,KAAK,KACL4K,OAAQvB,GACRwB,SAAS,SACTC,UAAU,EALd,UAOI,cAACJ,EAAA,EAAMK,OAAP,CAAcC,aAAW,EAAzB,SACY,cAACN,EAAA,EAAMO,MAAP,UAAc/H,OAE1B,cAACwH,EAAA,EAAMW,KAAP,UACKvI,EAAe,cAAC,EAAD,IACf,eAACwI,EAAA,EAAD,WACG,eAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,4BAAtB,UACI,cAACF,EAAA,EAAKG,MAAN,kCACA,cAACH,EAAA,EAAKI,QAAN,CAAcC,UAAQ,EAAC3M,KAAK,OAAO8M,aAAc1I,GAAUlE,SAAU,SAAAC,GAAMkE,GAAYlE,EAAEC,OAAOC,UAC/FqF,GAAsB,qBAAKkH,MAAM,yBAAyBtM,KAAK,QAAzC,yCAAsF,QAEjH,eAACgM,EAAA,EAAKC,MAAN,CAAYC,UAAU,2BAAtB,UACI,cAACF,EAAA,EAAKG,MAAN,qBACA,eAACM,EAAA,EAAD,CAAYC,eAAa,EAAzB,UACI,cAACD,EAAA,EAAWE,QAAZ,UACI,cAACF,EAAA,EAAWG,KAAZ,CAAiBC,GAAG,oBAApB,iBAEJ,cAACb,EAAA,EAAKI,QAAN,CACIC,UAAQ,EACR3M,KAAK,SACL8M,aAAclI,GACd1E,SAAU,SAAAC,GAAM0E,GAAa1E,EAAEC,OAAOC,aAG7C2F,GAAuB,qBAAK4G,MAAM,yBAAyBtM,KAAK,QAAzC,mDAAgG,QAE5H,eAACgM,EAAA,EAAKC,MAAN,CAAYC,UAAU,4BAAtB,UACI,cAACF,EAAA,EAAKG,MAAN,oBACA,cAACH,EAAA,EAAKI,QAAN,CAAcC,UAAQ,EAAC3M,KAAK,SAAS8M,aAAchI,GAAc5E,SAAU,SAAAC,GAAM4E,GAAgB5E,EAAEC,OAAOC,UACzG6F,GAA0B,qBAAK0G,MAAM,yBAAyBtM,KAAK,QAAzC,+CAA4F,QAErG,GAArB4E,GACA,qCACG,eAACoH,EAAA,EAAKC,MAAN,CAAYC,UAAU,6BAAtB,UACI,cAACF,EAAA,EAAKG,MAAN,qBACA,cAACH,EAAA,EAAKI,QAAN,CAAcC,UAAQ,EAACE,GAAG,SAAS3M,SAAU,SAAAC,GAAMoF,GAAqBpF,EAAEC,OAAOC,QAAjF,SACKqD,EAAa0J,KAAI,SAACzO,GACf,GAAyB,8BAAtB0O,OAAOC,KAAK3O,GAAG,GACd,OAAGA,EAAE6D,4BAA8B8C,GACvB,wBAAQjF,MAAO1B,EAAE6D,0BAA6DiL,UAAQ,EAAtF,SAAwFhD,GAAY9L,EAAE0B,QAArD1B,EAAE6D,2BAEnD,wBAAQnC,MAAO1B,EAAE6D,0BAAjB,SAA+EiI,GAAY9L,EAAE0B,QAA5C1B,EAAE6D,mCAO/E,eAAC8J,EAAA,EAAKC,MAAN,CAAYC,UAAU,6BAAtB,UACI,cAACF,EAAA,EAAKG,MAAN,oBACA,cAACH,EAAA,EAAKI,QAAN,CAAcC,UAAQ,EAACE,GAAG,SAAS3M,SAAU,SAAAC,GAAMkF,GAAoBlF,EAAEC,OAAOC,QAAhF,SACKqD,EAAa0J,KAAI,SAACzO,GACf,GAAyB,6BAAtB0O,OAAOC,KAAK3O,GAAG,GACd,OAAGA,EAAE8D,2BAA6B2C,GACtB,wBAAQ/E,MAAO1B,EAAE8D,yBAA2DgL,UAAQ,EAApF,SAAsFhD,GAAY9L,EAAE0B,QAApD1B,EAAE8D,0BAElD,wBAAQpC,MAAO1B,EAAE8D,yBAAjB,SAA6EgI,GAAY9L,EAAE0B,QAA3C1B,EAAE8D,kCAM9E,eAAC6J,EAAA,EAAKC,MAAN,CAAYC,UAAU,6BAAtB,UACI,cAACF,EAAA,EAAKG,MAAN,qBACA,cAACH,EAAA,EAAKI,QAAN,CAAcC,UAAQ,EAACE,GAAG,SAAS3M,SAAU,SAAAC,GAAMsF,GAAqBtF,EAAEC,OAAOC,QAAjF,SACKqD,EAAa0J,KAAI,SAACzO,GACf,GAAyB,8BAAtB0O,OAAOC,KAAK3O,GAAG,GACd,OAAGA,EAAE4D,4BAA8BiD,GACvB,wBAAQnF,MAAO1B,EAAE4D,0BAA6DkL,UAAQ,EAAtF,SACHhC,GAAY9M,EAAE0B,QADsC1B,EAAE4D,2BAInD,wBAAQlC,MAAO1B,EAAE4D,0BAAjB,SACHkJ,GAAY9M,EAAE0B,QADsC1B,EAAE4D,sCAQ5E,KACP,eAAC+J,EAAA,EAAKC,MAAN,CAAYC,UAAU,4BAAtB,UACI,cAACF,EAAA,EAAKG,MAAN,gDACA,cAACH,EAAA,EAAKI,QAAN,CAAcC,UAAQ,EAACE,GAAG,WAAWU,KAAM,EAAGT,aAAcxI,GAAiBpE,SAAU,SAAAC,GAAMoE,GAAmBpE,EAAEC,OAAOC,UACxHuF,GAA6B,qBAAKgH,MAAM,yBAAyBtM,KAAK,QAAzC,+CAA4F,QAE9H,eAACgM,EAAA,EAAKC,MAAN,CAAYC,UAAU,4BAAtB,UACI,cAACF,EAAA,EAAKG,MAAN,gDACA,cAACH,EAAA,EAAKI,QAAN,CAAcC,UAAQ,EAACE,GAAG,WAAWU,KAAM,EAAGT,aAActI,GAAqBtE,SAAU,SAAAC,GAAMsE,GAAuBtE,EAAEC,OAAOC,UAChIyF,GAAiC,qBAAK8G,MAAM,yBAAyBtM,KAAK,QAAzC,0DAAuG,QAE7I,eAACgM,EAAA,EAAKC,MAAN,CAAYC,UAAU,6BAAtB,UACI,cAACF,EAAA,EAAKG,MAAN,mBACA,cAACH,EAAA,EAAKI,QAAN,CAAcC,UAAQ,EAACE,GAAG,SAASC,aAAcpI,GAAexE,SAAU,SAAAC,GAAMwE,GAAiBxE,EAAEC,OAAOC,QAA1G,SACKmD,EAAU4J,KAAI,SAACzO,GACZ,OAAQ,wBAAQ0B,MAAO1B,EAAEyD,WAAjB,SAAiDqI,GAAY9L,EAAE6O,UAA7B7O,EAAEyD,yBAMhE,eAACsJ,EAAA,EAAMQ,OAAP,WACI,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAY7L,QAAS8J,GAArC,sBAGA,cAAC8B,EAAA,EAAD,CAAQC,QAAQ,UAAU7L,QAAS,kBAAM+J,MAAzC,mCAIR,eAACoB,EAAA,EAAD,CACIC,KAAMhD,GACN3H,KAAK,KACL4K,OAAQhB,GACRiB,SAAS,SACTC,UAAU,EALd,UAOI,cAACJ,EAAA,EAAMK,OAAP,CAAcC,aAAW,EAAzB,SACI,cAACN,EAAA,EAAMO,MAAP,kCAEJ,eAACP,EAAA,EAAMQ,OAAP,WACI,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAY7L,QAASqK,GAArC,sBAGJ,cAACuB,EAAA,EAAD,CAAQC,QAAQ,SAAS7L,QAAS,kBArW9CqI,IAAc,GACd3K,GAAW,QACX0E,EAAkBkG,IAAiBnK,MAAK,WACpCuC,EAAgBmJ,MAAW1L,MAAK,SAACC,GACpB,eAANA,GACCkF,GAAc,GACdN,EAAY5E,IAEZkF,GAAc,MAEnB7E,SAAQ,kBAAMf,GAAW,UA2VpB,4BAIJ,eAACyN,EAAA,EAAD,CACIC,KAAM5C,GACN6C,OAAQjB,GACRkB,SAAS,SACT7K,KAAK,KACL8K,UAAU,EALd,UAOI,cAACJ,EAAA,EAAMK,OAAP,CAAcC,aAAW,EAAzB,SACI,cAACN,EAAA,EAAMO,MAAP,UAAc/H,OAElB,cAACwH,EAAA,EAAMW,KAAP,CAAY1M,UAAU,UAAtB,SACKwJ,GAAgB,cAAC,EAAD,IACd,sBAAKxJ,UAAU,mBAAmBa,MAAO,CAACkN,MAAO,SAAjD,UACC,uBAAOC,QAAQ,gBAAf,SACGpE,GAAMF,QACL,qBAAKxJ,IAAK0J,GAAMF,QAAStJ,IAAKmE,GAAWwJ,MAAM,MAAME,OAAO,QAE5D,qCACE,qBAAKhB,MAAM,eAAe/M,IAAKoJ,GAAclJ,IAAKmE,KAClD,oBAAIvE,UAAU,kBAAd,sCACA,0EAIN,uBACEK,KAAK,OACLmN,GAAG,gBACH3M,MAAO,CAAEC,QAAS,QAClBP,SAlXA,SAAAC,GAClBA,EAAEC,OAAOyN,MAAMC,QACjBtE,GAAS,CACPH,QAAS0E,IAAIC,gBAAgB7N,EAAEC,OAAOyN,MAAM,IAC5CvE,IAAKnJ,EAAEC,OAAOyN,MAAM,QAgXJ,uBACClE,GAAc,qBAAKiD,MAAM,qBAAqBtM,KAAK,QAArC,SAA8CuJ,KAAyB,KACtF,wBAAQlK,UAAU,kBAAkBY,QAASsK,GAA7C,kCAGR,cAACa,EAAA,EAAMQ,OAAP,UACI,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAY7L,QAASoK,GAArC,2BAKP/G,EACA,qBAAKjE,UAAU,wBAAf,SACG,sBAAKA,UAAU,kBAAf,UACI,qBAAKA,UAAU,YAAf,SAA2B,2DAC3B,qBAAKA,UAAU,YAAf,SACI,4BACI,wBAAQA,UAAU,0BAA0BY,QAAS,kBAAM2J,MAA3D,2CAMf,mCACD,qBAAKvK,UAAU,YAAf,SACI,sBAAKA,UAAU,MAAf,UAEI,qBAAKA,UAAU,YAAf,SAA2B,wBAAQA,UAAU,sCAAsCY,QAAS,kBAAM2J,MAAvE,gCAC3B,qBAAKvK,UAAU,YAAf,SACI,wBAAOA,UAAU,QAAjB,UACI,gCACI,+BACI,oBAAIsO,MAAM,MAAV,gBACA,oBAAIA,MAAM,MAAV,oBACA,oBAAIA,MAAM,MAAV,oBACA,oBAAIA,MAAM,MAAMtO,UAAU,iCAA1B,mBACA,oBAAIsO,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,oBACA,oBAAIA,MAAM,MAAV,oBACA,oBAAIA,MAAM,MAAV,2BAGR,gCACE3K,EAAS8J,KAAI,SAAC5C,EAAM0D,GAClB,OACI,+BACI,oBAAID,MAAM,MAAV,SAAiC,IAAhBzD,EAAK2D,OAAgB,cAAC,IAAD,CAAiBvN,KAAMwN,IAAuBzO,UAAU,iBAAqB6K,EAAKnI,cACxH,6BAAqB,IAAhBmI,EAAK2D,OAAe1D,GAAYD,EAAKjJ,MAAM,yBAA2BkJ,GAAYD,EAAKjJ,QAC5F,oCAAOiJ,EAAK7I,SACZ,oBAAIhC,UAAU,iCAAd,SAAkE,IAAlB6K,EAAK5I,SAAkB,sBAAMjC,UAAU,yBAAhB,qBAA2D6K,EAAK5I,WACvI,6BAAK6I,GAAYD,EAAKgD,WACtB,6BACI,wBAAQ7N,UAAU,kBAAkBY,QAAS,kBA3hBlE,SAACiK,GACpBzG,GAAe,GACfE,IAAY,GACZ9C,IAAezC,MAAK,SAACC,GACjB8E,EAAa9E,GACbwG,GAAqBqF,EAAKlI,iBAC1B+C,GAAoBmF,EAAK/H,0BACzB8C,GAAqBiF,EAAKhI,2BAC1BiD,GAAqB+E,EAAKjI,2BAC1BoC,GAAiB6F,EAAKpI,YACtB6C,GAAiBuF,EAAKnI,aACtB8B,GAAa,IAAIqG,EAAKnI,YAAT,MAAiCoI,GAAYD,EAAKjJ,OAC/D8C,GAAYoG,GAAYD,EAAKjJ,OAC7BsD,GAAa2F,EAAK7I,OAClBoD,GAAgByF,EAAK5I,UACrB2C,GAAmBkG,GAAYD,EAAKhJ,cACpCiD,GAAuBgG,GAAYD,EAAKrI,mBACxCf,IAAmB1C,MAAK,SAAC2P,GACrB1K,EAAgB0K,SAErBrP,SAAQ,WAAO+E,GAAe,MAugB0DuK,CAAe9D,IAAlE,SACI,cAAC,IAAD,CAAiB5J,KAAM2N,UAG/B,6BACI,wBAAQ5O,UAAU,kBAAkBY,QAAS,kBAAMgK,GAAoBC,IAAvE,SACI,cAAC,IAAD,CAAiB5J,KAAM4N,UAG/B,6BACI,wBAAQ7O,UAAU,iBAAiBY,QAAS,kBA3c/D,SAACiK,GACtB5B,IAAc,GACdE,GAAmB0B,EAAKnI,aAyckEoM,CAAiBjE,IAAnE,SACI,cAAC,IAAD,CAAiB5J,KAAM8N,YAlB1BR,0BC1pBlCS,EA3BD,WACMxQ,cAUhB,OACI,qBAAKwB,UAAU,wBAAf,SACI,sBAAKA,UAAU,kBAAf,UACI,qBAAKA,UAAU,YAAf,SAA2B,sEAC3B,qBAAKA,UAAU,YAAf,gIACA,qBAAKA,UAAU,YAAf,SACI,4BACI,0F,wBC2yBTiP,EAvzBD,WAAO,IAAD,EACcrR,oBAAS,GADvB,mBACTS,EADS,KACAC,EADA,OAEcV,oBAAS,GAFvB,mBAETsR,EAFS,KAEAC,EAFA,OAGUvR,mBAAS,IAHnB,mBAGTwR,EAHS,KAGFC,EAHE,OAI0BzR,oBAAS,GAJnC,mBAIT0R,EAJS,KAIMC,EAJN,OAKgB3R,mBAAS,IALzB,mBAKT+F,EALS,KAKCC,EALD,OAM0BhG,mBAAS,IANnC,mBAMT4R,EANS,KAMMC,EANN,OAOoB7R,mBAAS,IAP7B,mBAOT8R,EAPS,KAOGC,EAPH,OAUc/R,oBAAS,GAVvB,oBAUTiJ,GAVS,MAUAC,GAVA,SAWoBlJ,oBAAS,GAX7B,qBAWT6I,GAXS,MAWGC,GAXH,SAYc9I,mBAAS,IAZvB,qBAYToJ,GAZS,MAYAC,GAZA,SAagBrJ,mBAAS,IAbzB,qBAaT4J,GAbS,MAaCC,GAbD,SAc4B7J,mBAAS,IAdrC,qBAcTsJ,GAdS,MAcOC,GAdP,SAeoCvJ,mBAAS,IAf7C,qBAeTgS,GAfS,MAeWvI,GAfX,SAgBsBzJ,mBAAS,IAhB/B,qBAgBTiS,GAhBS,MAgBIC,GAhBJ,SAiBsBlS,mBAAS,GAjB/B,qBAiBT8J,GAjBS,MAiBIC,GAjBJ,SAkBsB/J,mBAAS,IAlB/B,qBAkBTmS,GAlBS,MAkBIC,GAlBJ,SAoB0BpS,oBAAS,GApBnC,qBAoBT+I,GApBS,MAoBMC,GApBN,SAqBkChJ,oBAAS,GArB3C,qBAqBT0K,GArBS,MAqBUC,GArBV,SAsBoC3K,oBAAS,GAtB7C,qBAsBTgL,GAtBS,MAsBWC,GAtBX,SAuBgDjL,oBAAS,GAvBzD,qBAuBT4K,GAvBS,MAuBiBC,GAvBjB,SAwBwD7K,oBAAS,GAxBjE,qBAwBT8K,GAxBS,MAwBqBuH,GAxBrB,SAyB0CrS,oBAAS,GAzBnD,qBAyBTkL,GAzBS,MAyBcC,GAzBd,SA0BoBnL,oBAAS,GA1B7B,qBA0BTsS,GA1BS,MA0BGC,GA1BH,SA6B8BvS,oBAAS,GA7BvC,qBA6BTwM,GA7BS,MA6BQC,GA7BR,SA8BUzM,mBAAS,CAAE8L,QAAS,GAAIC,IAAK,KA9BvC,qBA8BTC,GA9BS,MA8BFC,GA9BE,SA+BkBjM,oBAAS,GA/B3B,qBA+BTwL,GA/BS,MA+BEC,GA/BF,SAgCwBzL,oBAAS,GAhCjC,qBAgCT4L,GAhCS,MAgCKC,GAhCL,SAiC4B7L,mBAAS,GAjCrC,qBAiCTkM,GAjCS,MAiCOC,GAjCP,SAkCwBnM,mBAAS,IAlCjC,qBAkCT0L,GAlCS,MAkCKC,GAlCL,SAmC4B3L,mBAAS,SAnCrC,qBAmCTsM,GAnCS,MAmCOC,GAnCP,SAoCoBvM,oBAAS,GApC7B,qBAoCToM,GApCS,MAoCGC,GApCH,SAuCoBrM,oBAAS,GAvC7B,qBAuCToL,GAvCS,MAuCGC,GAvCH,SAwC8BrL,mBAAS,GAxCvC,qBAwCTsL,GAxCS,MAwCQC,GAxCR,SA2CgBvL,oBAAS,GA3CzB,qBA2CTyG,GA3CS,MA2CCC,GA3CD,SA4CsB1G,oBAAS,GA5C/B,qBA4CTuG,GA5CS,MA4CIC,GA5CJ,SA6CgBxG,mBAAS,IA7CzB,qBA6CT6G,GA7CS,MA6CCC,GA7CD,SA8CkB9G,mBAAS,IA9C3B,qBA8CTqH,GA9CS,MA8CEC,GA9CF,SA+C8BtH,mBAAS,IA/CvC,qBA+CT+G,GA/CS,MA+CQC,GA/CR,SAgDsChH,mBAAS,IAhD/C,qBAgDTwS,GAhDS,MAgDYtL,GAhDZ,SAiD8BlH,mBAAS,IAjDvC,qBAiDTyS,GAjDS,MAiDQC,GAjDR,SAkDwB1S,mBAAS,GAlDjC,qBAkDTuH,GAlDS,MAkDKC,GAlDL,SAmDYxH,mBAAS,GAnDrB,qBAmDT2S,GAnDS,MAmDDC,GAnDC,SAqDkC5S,oBAAS,GArD3C,qBAqDT6S,GArDS,MAqDUC,GArDV,SAsDoC9S,oBAAS,GAtD7C,qBAsDTmI,GAtDS,MAsDWC,GAtDX,SAuDsCpI,oBAAS,GAvD/C,qBAuDTyI,GAvDS,MAuDYC,GAvDZ,SAwDkD1I,oBAAS,GAxD3D,qBAwDTqI,GAxDS,MAwDkBC,GAxDlB,SAyD0DtI,oBAAS,GAzDnE,qBAyDTuI,GAzDS,MAyDsBwK,GAzDtB,SA0D4C/S,oBAAS,GA1DrD,qBA0DT2I,GA1DS,MA0DeC,GA1Df,SA2D4B5I,oBAAS,GA3DrC,qBA2DTgT,GA3DS,MA2DOC,GA3DP,MA6DVpG,GAAU,WAEZ,OADqBvL,aAAaa,QAAQ,aAIxCgL,GAAoB,kBAAMV,IAAmB,IAE7CO,GAAsB,SAACC,GACzB8E,EAAc,IAAI9E,EAAKnI,YAAT,MAAiCoI,GAAYD,EAAKjJ,OAChEiI,GAAS,CAAEH,QAAS,GAAIC,IAAK,KAC7BN,IAAa,GACbI,IAAgB,GAChBM,GAAkBc,EAAKnI,aACvBO,EAAgB4H,EAAKnI,aAAa3D,MAAK,SAACC,GAAD,OAAOuK,GAAgBvK,MAAIK,SAAQ,kBAAMoK,IAAgB,OAY9FyB,GAAiB,uCAAG,WAAM1K,GAAN,eAAAlB,EAAA,sDACtBkB,EAAE2K,iBACF1B,IAAgB,IACV2B,EAAW,IAAIC,UACZC,OAAO,SAAU1B,GAAMD,KAChCyB,EAASE,OAAO,cAAexB,IAE/BvK,IAAMC,KAAM,0DACV4L,EACA,CACEG,QAAS,CACL,eAAgB,yBAGtBxM,MAAK,SAASyM,GAEQ,GAAnBA,EAAI7L,KAAK8L,OAEVtI,EAAasH,MAAW1L,MAAK,SAACC,GACjB,eAANA,GACCmQ,GAAW,GACXE,EAASrQ,IAETmQ,GAAW,MAEhB9P,SAAQ,WACPoK,IAAgB,GAChBJ,IAAa,MAES,GAAnBmC,EAAI7L,KAAK8L,QAChBhC,IAAgB,GAChBQ,IAAc,GACdE,GAAkB,uCACQ,GAAnBqB,EAAI7L,KAAK8L,SAChBhC,IAAgB,GAChBQ,IAAc,GACdE,GAAkB,0CAGrBuB,OAAM,WACL9L,QAAQC,IAAI,gBAxCQ,2CAAH,sDA4GjB6K,GAAkB,kBAAMpG,IAAY,IAEpC2G,GAAoB,kBAAMhC,IAAc,IAExC+B,GAAmB,kBAAM3B,IAAa,IAEtCiB,GAAiB,kBAAMxD,IAAW,IAElCyD,GAAgB,WAClBtD,GAAW,IACXQ,GAAY,IACZN,GAAkB,IAClBE,GAAsB,IACtBzD,EAAY,IACZ6L,EAAiB,IACjB9H,GAAe,GACfb,IAAW,GACXJ,IAAc,GACdpF,EAAgBmJ,MAAW1L,MAAK,SAACC,GAC7B4E,EAAY5E,MACbK,SAAQ,kBAAMqH,IAAc,OAgE7BiE,GAAe,YA5DI,WACrB,GAAgB,KAAblG,GAGC,OAFAuB,IAAsB,GACtB0K,IAAqB,IACd,EAIX,GAFI1K,IAAsB,GAET,KAAdf,IAAoBA,IAAa,EAGhC,OAFAqB,IAAuB,GACvBoK,IAAqB,IACd,EAIX,GAFIpK,IAAuB,GAEP,KAAjBnB,IAAuBA,IAAgB,EAGtC,OAFAqB,IAA0B,GAC1BkK,IAAqB,IACd,EAIX,GAFIlK,IAA0B,GAEP,KAApB7B,GAGC,OAFAuB,IAA6B,GAC7BwK,IAAqB,IACd,EAIX,GAFIxK,IAA6B,GAEN,KAAxBkK,GAGC,OAFAO,IAAiC,GACjCD,IAAqB,IACd,EAIX,GAFIC,IAAiC,KAEhCnB,EAAcrB,QAAU,GAEzB,OADAuC,IAAqB,IACd,EAEX,IAAI,IAAII,KAAOtB,EACX,IAAoC,IAAjCA,EAAcsB,GAAKC,WAAkD,GAA5BvB,EAAcsB,GAAKE,MAG3D,OAFAH,IAAkB,GAClBH,IAAqB,IACd,EAKf,OAFAG,IAAkB,GAClBH,IAAqB,IACd,GAYJO,KACC3M,IAAY,GACZhG,GAAW,GACXmF,EAAWgH,KAAW8F,GAAQ9L,GAAUE,GAAiByL,GAAqBjL,GAAcF,IAAWlG,MAAK,SAACC,GACzGgR,GAAehR,EAAE,IACjBkS,QAAQC,IAAIC,GAAqBb,KAASxR,MAAK,SAAUsS,GACrDlO,EAAasH,MAAW1L,MAAK,SAACC,GACjB,eAANA,GACCmQ,GAAW,GACXE,EAASrQ,IAETmQ,GAAW,MAEhB9P,SAAQ,WACPf,GAAW,cA2DzB8S,GAAuB,SAAC9N,GAC1B,IAAIgO,EAAW,GACf,IAAI,IAAIR,KAAOtB,EACX8B,EAASlS,KAAKiE,EAAmBmM,EAAcsB,GAAKpO,YAAaY,EAAYkM,EAAcsB,GAAKE,QAEpG,OAAOM,GAGL9G,GAAc,YA5DI,WACpB,GAAe,KAAZxD,GAGC,OAFAuB,IAAqB,GACrB3B,IAAiB,IACV,EAIX,GAFI2B,IAAqB,GAET,KAAbf,IAAmBA,IAAY,EAG9B,OAFAqB,IAAsB,GACtBjC,IAAiB,IACV,EAIX,GAFIiC,IAAsB,GAEP,KAAhBnB,IAAsBA,IAAe,EAGpC,OAFAqB,IAAyB,GACzBnC,IAAiB,IACV,EAIX,GAFImC,IAAyB,GAEP,KAAnB7B,GAGC,OAFAuB,IAA4B,GAC5B7B,IAAiB,IACV,EAIX,GAFI6B,IAA4B,GAEN,KAAvBmH,GAGC,OAFAK,IAAgC,GAChCrJ,IAAiB,IACV,EAIX,GAFIqJ,IAAgC,KAE/BT,EAAcrB,QAAU,GAEzB,OADAvH,IAAiB,IACV,EAEX,IAAI,IAAIkK,KAAOtB,EACX,IAAoC,IAAjCA,EAAcsB,GAAKC,WAAkD,GAA5BvB,EAAcsB,GAAKE,MAG3D,OAFAb,IAAc,GACdvJ,IAAiB,IACV,EAKf,OAFAuJ,IAAc,GACdvJ,IAAiB,IACV,GAYJ2K,KACCzK,IAAW,GACXxI,GAAW,GACX8E,EAAQqH,KAAWzD,GAASE,GAAgB0I,GAAoBlI,GAAaF,IAAUzI,MAAK,SAACC,GACzFgR,GAAehR,EAAE,IACjBkS,QAAQC,IAAIC,GAAqBpS,EAAE,GAAG0D,cAAc3D,MAAK,SAAUsS,GAC/D,IAAI,IAAIP,KAAOO,EACQ,GAAhBA,EAAQP,IACPlR,QAAQC,IAAI,SAGpBsD,EAAasH,MAAW1L,MAAK,SAACC,GACjB,eAANA,GACCmQ,GAAW,GACXE,EAASrQ,IAETmQ,GAAW,MAEhB9P,SAAQ,WACPf,GAAW,GACX+L,IAAmB,cAOjCmH,GAAmB,SAAC9Q,EAAOwB,EAAWD,GAExCwN,GAAiB,SAACD,GACd,IAAIiC,EAAMjC,EACV,IAAI,IAAIsB,KAAOW,EACRA,EAAIX,GAAKpO,aAAeR,IACpBxB,EAAQgR,OAAOD,EAAIX,GAAK7O,WACvBwP,EAAIX,GAAKC,WAAY,EACrBU,EAAIX,GAAKE,MAAQ,IAEjBS,EAAIX,GAAKC,WAAY,EACrBU,EAAIX,GAAKE,MAAQtQ,IAI7B,OAAO,YAAI+Q,OAKbE,GAAc,SAAC9G,GAEjB,IAAI+G,EAAa/G,EAAKgH,MAAM,KAAK,GAC7BjQ,EAAQiJ,EAAKgH,MAAM,KAAK,GAAIA,MAAM,KAAK,GACvC5P,EAAY4I,EAAKgH,MAAM,KAAK,GAAIA,MAAM,KAAK,GAE/CpC,EAAiB,GAAD,mBAAKD,GAAL,CAAoB,CAChC9M,YAAakP,EACbhQ,KAAMA,EACNK,SAAUA,EACV+O,MAAO,MAEXpN,GAAY,SAACD,GACT,IAAI8N,EAAM,GACV,IAAI,IAAIX,KAAOnN,EACRA,EAASmN,GAAKpO,aAAekP,GAC5BH,EAAIrS,KAAKuE,EAASmN,IAG1B,MAAM,GAAN,OAAWW,OAwBnB,SAAS3G,GAAYa,GACjB,OAAOC,mBAAmBC,OAAOF,IAGrC,OAtBA7L,qBAAU,WACNqD,EAAasH,MAAW1L,MAAK,SAACC,GACjB,eAANA,GACCmQ,GAAW,GACXE,EAASrQ,IAETmQ,GAAW,GAEfjM,EAAqBuH,MAAW1L,MAAK,SAAC2P,GAChB,IAAfA,EAAE,GAAGoD,MACJvC,GAAiB,GAEjBA,GAAiB,SAG1BlQ,SAAQ,kBAAMf,GAAW,QAC7B,IAOC,8BACI,qBAAK0B,UAAU,OAAf,SACK3B,EAAW,cAAC,EAAD,IAER,qCACA,eAAC0N,EAAA,EAAD,CACIC,KAAM3H,GACNhD,KAAK,KACL4K,OAAQvB,GACRwB,SAAS,SACTC,UAAU,EALd,UAOI,cAACJ,EAAA,EAAMK,OAAP,CAAcC,aAAW,EAAzB,SACI,cAACN,EAAA,EAAMO,MAAP,UAAcoD,MAElB,cAAC3D,EAAA,EAAMW,KAAP,UACKvI,GAAe,cAAC,EAAD,IACf,eAACwI,EAAA,EAAD,WACG,eAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,4BAAtB,UACI,cAACF,EAAA,EAAKG,MAAN,iCACA,cAACH,EAAA,EAAKI,QAAN,CAAc1M,KAAK,OAAOC,YAAY,yCAAyCI,MAAO+D,GAAUlE,SAAU,SAAAC,GAAMkE,GAAYlE,EAAEC,OAAOC,UACpIqF,GAAsB,qBAAKkH,MAAM,yBAAyBtM,KAAK,QAAzC,yCAAsF,QAEjH,eAACgM,EAAA,EAAKC,MAAN,CAAYC,UAAU,2BAAtB,UACI,cAACF,EAAA,EAAKG,MAAN,qBACA,eAACM,EAAA,EAAD,CAAYC,eAAa,EAAzB,UACI,cAACD,EAAA,EAAWE,QAAZ,UACI,cAACF,EAAA,EAAWG,KAAZ,CAAiBC,GAAG,oBAApB,iBAEJ,cAACb,EAAA,EAAKI,QAAN,CACIzM,YAAY,MACZI,MAAOuE,GACP5E,KAAK,SACLE,SAAU,SAAAC,GAAM0E,GAAa1E,EAAEC,OAAOC,aAG7C2F,GAAuB,qBAAK4G,MAAM,yBAAyBtM,KAAK,QAAzC,mDAAgG,QAE5H,eAACgM,EAAA,EAAKC,MAAN,CAAYC,UAAU,4BAAtB,UACI,cAACF,EAAA,EAAKG,MAAN,gCACA,cAACH,EAAA,EAAKI,QAAN,CAAcC,UAAQ,EAAC3M,KAAK,SAASC,YAAY,KAAKI,MAAOyE,GAAc5E,SAAU,SAAAC,GAAM4E,GAAgB5E,EAAEC,OAAOC,UACnH6F,GAA0B,qBAAK0G,MAAM,yBAAyBtM,KAAK,QAAzC,+CAA4F,QAE3H,eAACgM,EAAA,EAAKC,MAAN,CAAYC,UAAU,4BAAtB,UACI,cAACF,EAAA,EAAKG,MAAN,+CACA,cAACH,EAAA,EAAKI,QAAN,CAAcG,GAAG,WAAW5M,YAAY,2EAA2EI,MAAOiE,GAAiBiJ,KAAM,EAAGrN,SAAU,SAAAC,GAAMoE,GAAmBpE,EAAEC,OAAOC,UAC/LuF,GAA6B,qBAAKgH,MAAM,yBAAyBtM,KAAK,QAAzC,+CAA4F,QAE9H,eAACgM,EAAA,EAAKC,MAAN,CAAYC,UAAU,4BAAtB,UACI,cAACF,EAAA,EAAKG,MAAN,gDACA,cAACH,EAAA,EAAKI,QAAN,CAAcG,GAAG,WAAWU,KAAM,EAAGtN,YAAY,mCAAmCI,MAAO0P,GAAqB7P,SAAU,SAAAC,GAAMsE,GAAuBtE,EAAEC,OAAOC,UAC/JyF,GAAiC,qBAAK8G,MAAM,yBAAyBtM,KAAK,QAAzC,0DAAuG,QAE7I,eAACgM,EAAA,EAAKC,MAAN,CAAYC,UAAU,4BAAtB,UACI,cAACF,EAAA,EAAKG,MAAN,gCACA,qBAAK9M,UAAU,YAAf,SACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,WAAf,UACI,cAAC2M,EAAA,EAAKC,MAAN,CAAYC,UAAU,6BAAtB,SACI,eAACF,EAAA,EAAKI,QAAN,CAAcC,UAAQ,EAACE,GAAG,SAAS3M,SAAU,SAAAC,GAEzC8P,GAAmB9P,EAAEC,OAAOC,QAFhC,UAII,wBAAQA,MAAO,EAAf,uCACCiD,EAAS8J,KAAI,SAACzO,GACX,OAAQ,wBAAQ0B,MAAO1B,EAAE0D,YAAY,IAAIoI,GAAY9L,EAAE4C,MAAM,IAAI5C,EAAEiD,SAA3D,SAA0F6I,GAAY9L,EAAE4C,OAA9B5C,EAAE0D,qBAKhG,wBAAQrC,KAAK,SAASL,UAAU,yBAAyBY,QAAS,kBAAM+Q,GAAYtB,KAApF,0BAEJ,qBAAKrQ,UAAU,aACf,sBAAKA,UAAU,WAAf,UACI,eAAC2M,EAAA,EAAKC,MAAN,CAAYM,GAAI6E,IAAKlF,UAAU,qBAA/B,UACI,cAACmF,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,2CAEJ,cAACD,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,8CAGPzC,EAAc/B,KAAI,SAACzO,EAAGuP,GAEnB,OAAQ,8BAAiB,eAAC5B,EAAA,EAAKC,MAAN,CAAYM,GAAI6E,IAAKlF,UAAU,qBAA/B,UACrB,cAACmF,EAAA,EAAD,CAAKC,GAAG,IAAR,SACKnH,GAAY9L,EAAE4C,QAEnB,eAACoQ,EAAA,EAAD,CAAKC,GAAG,IAAR,UACI,cAACtF,EAAA,EAAKI,QAAN,CAAc1M,KAAK,SAASC,YAAatB,EAAEiD,SAAUiQ,IAAKlT,EAAEiD,SAAUvB,MAAO1B,EAAEgS,MAAOzQ,SAAU,SAAAC,GAAMgR,GAAiBhR,EAAEC,OAAOC,MAAO1B,EAAE0D,YAAa1D,EAAEiD,aACvJjD,EAAE+R,UAAa,qBAAK9D,MAAM,sBAAsBtM,KAAK,QAAtC,qDAA+F,YANrG4N,MAUrBqC,GAAkB,qBAAK3D,MAAM,sBAAsBtM,KAAK,QAAtC,8BAAwE,qBAQnH,eAACoL,EAAA,EAAMQ,OAAP,WACKkE,GAAqB,qBAAKxD,MAAM,yBAAyBtM,KAAK,QAAzC,kDAA+F,KACpH6O,EAAcrB,QAAU,EAAI,KAAQ,qBAAKlB,MAAM,yBAAyBtM,KAAK,QAAzC,oDACrC,cAAC6L,EAAA,EAAD,CAAQC,QAAQ,YAAY7L,QAAS8J,GAArC,sBAGA,cAAC8B,EAAA,EAAD,CAAQC,QAAQ,UAAU7L,QAAS,kBAAM+J,MAAzC,mCAIR,eAACoB,EAAA,EAAD,CACIC,KAAMhD,GACN3H,KAAK,KACL4K,OAAQhB,GACRiB,SAAS,SACTC,UAAU,EALd,UAOI,cAACJ,EAAA,EAAMK,OAAP,CAAcC,aAAW,EAAzB,SACI,cAACN,EAAA,EAAMO,MAAP,kCAEJ,eAACP,EAAA,EAAMQ,OAAP,WACI,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAY7L,QAASqK,GAArC,sBAGJ,cAACuB,EAAA,EAAD,CAAQC,QAAQ,SAAS7L,QAAS,kBA9blDqI,IAAc,GACd3K,GAAW,QACX0E,EAAkBkG,IAAiBnK,MAAK,WACpCoE,EAAasH,MAAW1L,MAAK,SAACC,GACjB,eAANA,GACCmQ,GAAW,GACXE,EAASrQ,IAETmQ,GAAW,MAEhB9P,SAAQ,kBAAMf,GAAW,UAobhB,4BAIJ,eAACyN,EAAA,EAAD,CACIC,KAAM5C,GACN6C,OAAQjB,GACRkB,SAAS,SACT7K,KAAK,KACL8K,UAAU,EALd,UAOI,cAACJ,EAAA,EAAMK,OAAP,CAAcC,aAAW,EAAzB,SACI,cAACN,EAAA,EAAMO,MAAP,UAAcoD,MAElB,cAAC3D,EAAA,EAAMW,KAAP,CAAY1M,UAAU,UAAtB,SACKwJ,GAAgB,cAAC,EAAD,IACd,sBAAKxJ,UAAU,mBAAmBa,MAAO,CAACkN,MAAO,SAAjD,UACC,uBAAOC,QAAQ,gBAAf,SACCpE,GAAMF,QACH,qBAAKxJ,IAAK0J,GAAMF,QAAStJ,IAAKsP,EAAY3B,MAAM,MAAME,OAAO,QAE7D,qCACA,qBAAKhB,MAAM,eAAe/M,IAAKoJ,GAAclJ,IAAKsP,IAClD,oBAAI1P,UAAU,kBAAd,sCACA,0EAIJ,uBACAK,KAAK,OACLmN,GAAG,gBACH3M,MAAO,CAAEC,QAAS,QAClBP,SAzhBF,SAAAC,GAClBA,EAAEC,OAAOyN,MAAMC,QACjBtE,GAAS,CACPH,QAAS0E,IAAIC,gBAAgB7N,EAAEC,OAAOyN,MAAM,IAC5CvE,IAAKnJ,EAAEC,OAAOyN,MAAM,QAuhBA,uBACClE,GAAc,qBAAKiD,MAAM,qBAAqBtM,KAAK,QAArC,SAA8CuJ,KAAyB,KACtF,wBAAQlK,UAAU,kBAAkBY,QAASsK,GAA7C,kCAGR,cAACa,EAAA,EAAMQ,OAAP,UACI,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAY7L,QAASoK,GAArC,2BAMR,eAACe,EAAA,EAAD,CACIC,KAAM5B,GACN6B,OAAQlB,GACRmB,SAAS,SACTC,UAAU,EAJd,UAKI,cAACJ,EAAA,EAAMK,OAAP,CAAcC,aAAW,EAAzB,SACA,cAACN,EAAA,EAAMO,MAAP,4GAEA,eAACP,EAAA,EAAMQ,OAAP,WACI,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAY7L,QAASmK,GAArC,qBAGA,cAACyB,EAAA,EAAD,CAAQC,QAAQ,UAAU7L,QAAS,WAC/ByJ,IAAmB,GACnBO,GAAoBmF,KAFxB,gCASR,eAAChE,EAAA,EAAD,CACIC,KAAMnF,GACNxF,KAAK,KACL4K,OAAQ3B,GACR4B,SAAS,SACTC,UAAU,EALd,UAOI,cAACJ,EAAA,EAAMK,OAAP,CAAcC,aAAW,EAAzB,SACY,cAACN,EAAA,EAAMO,MAAP,8BAEZ,cAACP,EAAA,EAAMW,KAAP,UACKjG,GAAc,cAAC,EAAD,IACd,eAACkG,EAAA,EAAD,WACG,eAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,4BAAtB,UACI,cAACF,EAAA,EAAKG,MAAN,iCACA,cAACH,EAAA,EAAKI,QAAN,CAAc1M,KAAK,OAAOC,YAAY,yCAAyCC,SAAU,SAAAC,GAAMyG,GAAWzG,EAAEC,OAAOC,UAClH4H,GAAqB,qBAAK2E,MAAM,yBAAyBtM,KAAK,QAAzC,yCAAsF,QAEhH,eAACgM,EAAA,EAAKC,MAAN,CAAYC,UAAU,2BAAtB,UACI,cAACF,EAAA,EAAKG,MAAN,qBACA,eAACM,EAAA,EAAD,CAAYC,eAAa,EAAzB,UACI,cAACD,EAAA,EAAWE,QAAZ,UACI,cAACF,EAAA,EAAWG,KAAZ,CAAiBC,GAAG,oBAApB,iBAEJ,cAACb,EAAA,EAAKI,QAAN,CACIzM,YAAY,MACZD,KAAK,SACLE,SAAU,SAAAC,GAAMiH,GAAYjH,EAAEC,OAAOC,aAG5CkI,GAAsB,qBAAKqE,MAAM,yBAAyBtM,KAAK,QAAzC,mDAAgG,QAE3H,eAACgM,EAAA,EAAKC,MAAN,CAAYC,UAAU,4BAAtB,UACI,cAACF,EAAA,EAAKG,MAAN,gCACA,cAACH,EAAA,EAAKI,QAAN,CAAcC,UAAQ,EAAC3M,KAAK,SAASC,YAAY,KAAKC,SAAU,SAAAC,GAAMmH,GAAenH,EAAEC,OAAOC,UAC7FoI,GAAyB,qBAAKmE,MAAM,yBAAyBtM,KAAK,QAAzC,+CAA4F,QAE1H,eAACgM,EAAA,EAAKC,MAAN,CAAYC,UAAU,4BAAtB,UACI,cAACF,EAAA,EAAKG,MAAN,+CACA,cAACH,EAAA,EAAKI,QAAN,CAAcG,GAAG,WAAW5M,YAAY,2EAA2EsN,KAAM,EAAGrN,SAAU,SAAAC,GAAM2G,GAAkB3G,EAAEC,OAAOC,UACtK8H,GAA4B,qBAAKyE,MAAM,yBAAyBtM,KAAK,QAAzC,+CAA4F,QAE7H,eAACgM,EAAA,EAAKC,MAAN,CAAYC,UAAU,4BAAtB,UACI,cAACF,EAAA,EAAKG,MAAN,gDACA,cAACH,EAAA,EAAKI,QAAN,CAAcG,GAAG,WAAWU,KAAM,EAAGtN,YAAY,mCAAmCC,SAAU,SAAAC,GAAM6G,GAAsB7G,EAAEC,OAAOC,UAClIgI,GAAgC,qBAAKuE,MAAM,yBAAyBtM,KAAK,QAAzC,0DAAuG,QAE5I,eAACgM,EAAA,EAAKC,MAAN,CAAYC,UAAU,4BAAtB,UACI,cAACF,EAAA,EAAKG,MAAN,gCACA,qBAAK9M,UAAU,YAAf,SACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,WAAf,UACI,cAAC2M,EAAA,EAAKC,MAAN,CAAYC,UAAU,6BAAtB,SACI,eAACF,EAAA,EAAKI,QAAN,CAAcC,UAAQ,EAACE,GAAG,SAAS3M,SAAU,SAAAC,GAEzCsP,GAAetP,EAAEC,OAAOC,QAF5B,UAII,wBAAQA,MAAO,EAAf,uCACCiD,EAAS8J,KAAI,SAACzO,GACX,OAAQ,wBAAQ0B,MAAO1B,EAAE0D,YAAY,IAAIoI,GAAY9L,EAAE4C,MAAM,IAAI5C,EAAEiD,SAA3D,SAA0F6I,GAAY9L,EAAE4C,OAA9B5C,EAAE0D,qBAKhG,wBAAQrC,KAAK,SAASL,UAAU,yBAAyBY,QAAS,kBAAM+Q,GAAY9B,KAApF,0BAEJ,qBAAK7P,UAAU,aACf,sBAAKA,UAAU,WAAf,UACI,eAAC2M,EAAA,EAAKC,MAAN,CAAYM,GAAI6E,IAAKlF,UAAU,qBAA/B,UACI,cAACmF,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,2CAEJ,cAACD,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,8CAGPzC,EAAc/B,KAAI,SAACzO,EAAGuP,GAEnB,OAAQ,8BAAiB,eAAC5B,EAAA,EAAKC,MAAN,CAAYM,GAAI6E,IAAKlF,UAAU,qBAA/B,UACrB,cAACmF,EAAA,EAAD,CAAKC,GAAG,IAAR,SACKjT,EAAE4C,OAEP,eAACoQ,EAAA,EAAD,CAAKC,GAAG,IAAR,UACI,cAACtF,EAAA,EAAKI,QAAN,CAAc1M,KAAK,SAASC,YAAatB,EAAEiD,SAAUiQ,IAAKlT,EAAEiD,SAAU1B,SAAU,SAAAC,GAAMgR,GAAiBhR,EAAEC,OAAOC,MAAO1B,EAAE0D,YAAa1D,EAAEiD,aACvIjD,EAAE+R,UAAa,qBAAK9D,MAAM,sBAAsBtM,KAAK,QAAtC,qDAA+F,YANrG4N,MAUrB2B,GAAc,qBAAKjD,MAAM,sBAAsBtM,KAAK,QAAtC,8BAAwE,qBAQ/G,eAACoL,EAAA,EAAMQ,OAAP,WACK5F,GAAiB,qBAAKsG,MAAM,yBAAyBtM,KAAK,QAAzC,kDAA+F,KAChH6O,EAAcrB,QAAU,EAAI,KAAQ,qBAAKlB,MAAM,yBAAyBtM,KAAK,QAAzC,oDACrC,cAAC6L,EAAA,EAAD,CAAQC,QAAQ,YAAY7L,QAAS0J,GAArC,sBAGA,cAACkC,EAAA,EAAD,CAAQC,QAAQ,UAAU7L,QAAS,kBAAM4J,MAAzC,mCAGP0E,EAAW,qBAAKlP,UAAU,wBAAf,SACR,sBAAKA,UAAU,kBAAf,UACI,qBAAKA,UAAU,YAAf,SAA2B,2HAC3B,qBAAKA,UAAU,YAAf,SACI,4BACKsP,EAAiB,sBAAMtP,UAAU,kBAAhB,gEACjB,wBAAQA,UAAU,0BAA0BY,QAAS,kBAAM2J,MAA3D,0CAKhB,qBAAKvK,UAAU,YAAf,SACG,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,YAAf,SAA2B,wBAAQA,UAAU,sCAAsCY,QAAS,kBAAM2J,MAAvE,+BAC3B,qBAAKvK,UAAU,YAAf,SACI,wBAAOA,UAAU,QAAjB,UACI,gCACI,+BACI,oBAAIsO,MAAM,MAAV,gBACA,oBAAIA,MAAM,MAAV,oBACA,oBAAIA,MAAM,MAAV,oBACA,oBAAIA,MAAM,MAAMtO,UAAU,iCAA1B,mBACA,oBAAIsO,MAAM,MAAV,oBACA,oBAAIA,MAAM,MAAV,oBACA,oBAAIA,MAAM,MAAV,2BAGR,gCACEc,EAAM3B,KAAI,SAAC5C,EAAM0D,GACf,OACI,+BACI,oBAAID,MAAM,MAAV,SAAiC,IAAhBzD,EAAK2D,OAAgB,cAAC,IAAD,CAAiBvN,KAAMwN,IAAuBzO,UAAU,iBAAqB6K,EAAKnI,cACxH,6BAAqB,IAAhBmI,EAAK2D,OAAe1D,GAAYD,EAAKjJ,MAAM,yBAA2BkJ,GAAYD,EAAKjJ,QAC5F,oCAAOiJ,EAAK7I,SACZ,oBAAIhC,UAAU,iCAAd,SAAkE,IAAlB6K,EAAK5I,SAAkB,sBAAMjC,UAAU,yBAAhB,qBAA2D6K,EAAK5I,WACvI,6BACI,wBAAQjC,UAAU,kBAAkBY,QAAS,kBAhoBtE,SAACiK,GACpBzG,IAAe,GACfE,IAAY,GACZhD,EAAgBmJ,MAAW1L,MAAK,SAAC2P,GAC7B9K,EAAY8K,MACb3P,MAAK,WACJyE,EAAwBqH,EAAKnI,aAAa3D,MAAK,SAACC,GAC5C,IAAImT,EAAS,GADoC,WAEzCrB,GACJqB,EAAO/S,KAAK,CACRsD,YAAa1D,EAAE8R,GAAKpO,YACpBd,KAAM5C,EAAE8R,GAAKlP,KACbK,SAAUjD,EAAE8R,GAAK7O,SACjB+O,MAAOhS,EAAE8R,GAAKE,QAGlBpN,GAAY,SAACD,GACT,IAAI8N,EAAM,GACV,IAAI,IAAIW,KAAQzO,EACTA,EAASyO,GAAM1P,aAAe1D,EAAE8R,GAAKpO,aACpC+O,EAAIrS,KAAKuE,EAASyO,IAG1B,MAAM,GAAN,OAAWX,OAfnB,IAAI,IAAIX,KAAO9R,EAAG,EAAV8R,GAmBRrB,EAAiB0C,GACjBxC,EAAc,IAAI9E,EAAKnI,YAAT,MAAiCoI,GAAYD,EAAKjJ,OAChE8C,GAAYmG,EAAKjJ,MACjBsD,GAAa2F,EAAK7I,OAClBoD,GAAgByF,EAAK5I,UACrB2C,GAAmBiG,EAAKhJ,aACxBiD,GAAuB+F,EAAKrI,kBAC5BgO,GAAU3F,EAAKnI,mBAEpBrD,SAAQ,WAEP+E,IAAe,MA0lB4EuK,CAAe9D,IAAlE,SACI,cAAC,IAAD,CAAiB5J,KAAM2N,UAG/B,6BACI,wBAAQ5O,UAAU,kBAAkBY,QAAS,kBAAMgK,GAAoBC,IAAvE,SACI,cAAC,IAAD,CAAiB5J,KAAM4N,UAG/B,6BACI,wBAAQ7O,UAAU,iBAAiBY,QAAS,kBA9pBnE,SAACiK,GACtB5B,IAAc,GACdE,GAAmB0B,EAAKnI,aA4pBsEoM,CAAiBjE,IAAnE,SACI,cAAC,IAAD,CAAiB5J,KAAM8N,YAjB1BR,0BCznBtC8D,EAnJC,WACZ,IAAM9T,EAAUC,cADE,EAEMZ,mBAAS,IAFf,mBAEX0U,EAFW,KAELC,EAFK,OAGc3U,mBAAS,IAHvB,mBAGX4U,EAHW,KAGDC,EAHC,OAIY7U,oBAAS,GAJrB,mBAIXS,EAJW,KAIFC,EAJE,OAKQV,oBAAS,GALjB,mBAKXO,EALW,KAKJC,EALI,OAMsBR,mBAAS,IAN/B,mBAMX8U,EANW,KAMGxU,EANH,KAQZuM,EAAO,uCAAG,4BAAAnL,EAAA,6DACZhB,GAAW,IACLqU,EAAezT,aAAaa,QAAQ,cAEtCxB,EAAQa,KAAK,KAJL,kBAMLuT,GANK,2CAAH,qDASPC,EAAW,uCAAG,4BAAAtT,EAAA,+EAEWC,IAAMC,KAAK,2DAC9B,CACI3B,MAAOyU,IAJH,cAEN5S,EAFM,yBAOLA,EAASC,MAPJ,gCASZrB,GAAW,GACXF,GAAS,GACTF,EAAgB,gCAAD,cACf0B,QAAQC,IAAR,8CAZY,yDAAH,qDAgDjB,OAfAC,qBAAU,WACN2K,IAAU1L,MAAK,SAACC,GAAD,OAAOuT,EAAQvT,MAAIK,SAAQ,WACtCuT,IAAc7T,MAAK,SAACC,GAChB,QAASC,IAAND,EAAgB,CACf,IAAM4C,EAAO5C,EAAE,GAAG4C,KAAK,IAAI5C,EAAE,GAAG6T,UAChCJ,EAAY7Q,QAEZxD,GAAS,GACTF,EAAgB,wFAGrBmB,SAAQ,kBAAMf,GAAW,WAEjC,CAACkU,IAEDrU,EAEK,qBAAK6B,UAAU,wBAAf,SACI,sBAAKA,UAAU,kBAAf,UACI,qBAAKA,UAAU,YAAf,SAA2B,6BAAI,cAAC,IAAD,CAAiBiB,KAAM6R,IAASzR,KAAK,WACpE,qBAAKrB,UAAU,YAAf,SAA2B,6BAAK0S,WAMxC,8BACKrU,EACG,cAAC,EAAD,IAEH,gCACG,sBAAK2B,UAAU,0DAAf,UACI,qBAAKE,IAAKC,EAAMH,UAAU,YAAYI,IAAI,mBAAmB2N,MAAM,QACnE,wBAAQ/N,UAAU,iBAAiBK,KAAK,SAAS0S,cAAY,WAAWC,cAAY,0BAA0BC,gBAAc,yBAAyBC,gBAAc,QAAQC,aAAW,oBAAtL,SACI,sBAAMnT,UAAU,0BAGpB,sBAAKA,UAAU,2BAA2BwN,GAAG,yBAA7C,UACI,qBAAIxN,UAAU,qBAAd,UACI,oBAAIA,UAAU,kBAAd,SACI,cAAC,IAAD,CAAMoT,GAAG,eAAT,SACI,wBAAQpT,UAAU,wBAAlB,wBAGR,oBAAIA,UAAU,WAAd,SACI,cAAC,IAAD,CAAMoT,GAAG,wBAAT,SACI,wBAAQpT,UAAU,wBAAlB,2BAGR,oBAAIA,UAAU,WAAd,SACI,cAAC,IAAD,CAAMoT,GAAG,uBAAT,SACI,wBAAQpT,UAAU,wBAAlB,0BAGR,oBAAIA,UAAU,WAAd,SACI,mBAAGA,UAAU,oBAAoBC,KAAK,IAAtC,oBAGR,qBAAKD,UAAU,eAAf,SACI,qBAAKA,UAAU,YAAf,SACI,qBAAKA,UAAU,sDAAf,SACI,qBAAKA,UAAU,YAAf,SAA4BwS,UAIxC,qBAAKxS,UAAU,gBAAf,SACI,wBAAQA,UAAU,uBAAuB+S,cAAY,UAAUnS,QAAS,kBAlFhG1B,aAAamU,aACb9U,EAAQa,KAAK,MAiFmGkU,iBAAe,SAASC,MAAM,gBAAtH,SACI,cAAC,IAAD,CAAiBtS,KAAMuS,gBAKvC,qBAAK3S,MAAO,CAAC4S,UAAW,UAAWC,WAAY,UAA/C,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAK,wBAAZ,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAQA,KAAK,uBAAb,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAQA,KAAK,eAAb,SACI,cAAC,EAAD,iBC7HjBC,MAZf,WAEE,OADAC,SAASN,MAAQ,6BAEf,cAAC,IAAD,CAAQO,SAAS,eAAjB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACJ,KAAK,IAAIK,UAAWrW,IACjC,cAAC,IAAD,CAAOgW,KAAK,cAAcK,UAAW3B,UCD9B4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpV,MAAK,YAAkD,IAA/CqV,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFd,SAASe,eAAe,SAM1BX,M","file":"static/js/main.9205a65b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/logo.f717c212.png\";","import React, {useState, useEffect} from 'react';\nimport '../css/Login/login.css';\nimport Logo from '../resources/images/logo.png';\nimport axios from \"axios\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCoffee } from '@fortawesome/free-solid-svg-icons';\nimport { useHistory } from \"react-router-dom\";\n\nconst Login = () => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [erroMessage, setErrorMessage] = useState('');\n    const [error, setError] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [user, setUser] = useState([]);\n    const history = useHistory();\n\n    const signInValidation = () => {\n        if(email === '' || password === ''){\n            setError(true);\n            setErrorMessage('Necesitas incluir tu correo y contraseña');\n        }else{\n            if(validateEmail(email)){\n                setError(false);\n                setLoading(true);\n                signIn().then((x) => {\n                    if(x !== undefined){\n                        //console.log(x[0]);\n                        localStorage.setItem(\"08191993\", x[0].email)\n                        history.push(\"/bienvenido\");\n                    }\n                }).finally(() => setLoading(false));\n            }else{\n                setError(true);\n                setErrorMessage('El correo es incorrecto');\n            }\n            \n        }\n    };\n\n    const signIn = async () =>{\n        try {\n            const response = await axios.post('https://tienditacafe.com/proveedores/api/login.php', \n                { \n                    email: email,\n                    pwd: password \n                }\n            );\n            if(response.data === 0){\n                setError(true);\n                setErrorMessage('Email o contraseña incorrectos');\n            }else{\n                setError(false);\n                return response.data;\n            }\n        } catch (e) {\n            setError(true);\n            setErrorMessage(`😱 Request failed: ${e}`);\n            console.log(`😱 Request failed: ${e}`);\n        }\n    };\n\n    function validateEmail(email) {\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        return re.test(String(email).toLowerCase());\n    }\n\n    const session = () => {\n        const loggedInUser = localStorage.getItem(\"08191993\");\n        if (loggedInUser) {\n            history.push(\"/bienvenido\");\n        }\n    };\n\n    useEffect(() => {\n        // creamos una función para actualizar el estado con el clientWidth\n        session();\n    }, []);\n\n    return (\n        <div className=\"App\">\n            <div className=\"auth-wrapper\">\n                <div className=\"auth-inner\">\n                    <div>\n                        <a href=\"https://tienditacafe.com/\">\n                            <img src={Logo} className=\"img-fluid\" alt=\"Responsive image\"></img>\n                        </a>\n                        <h3></h3>\n\n                        <div className=\"form-group\">\n                            <input type=\"email\" className=\"form-control\" placeholder=\"Correo electronico\" onChange={(e) => setEmail(e.target.value)} value={email} />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input type=\"password\" className=\"form-control\" placeholder=\"Contraseña\" onChange={(e) => setPassword(e.target.value)} value={password} />\n                        </div>\n                        {error ? (<div className=\"alert alert-danger\" role=\"alert\">{erroMessage}</div>) : null}\n                        <button type=\"submit\" className=\"btn btn-primary btn-block\" onClick={() => signInValidation()}>Entrar</button>\n                        <p className=\"forgot-password text-right\">\n                            {/*<a href=\"#\">Olvide mi contraseña</a>*/}\n                        </p>\n                        {loading ?\n                        (<div style={{display: 'flex',  justifyContent:'center', alignItems:'center'}}>\n                            <FontAwesomeIcon icon={faCoffee} pulse />\n                        </div>)\n                        : null}\n                        \n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Login\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCoffee } from '@fortawesome/free-solid-svg-icons';\nimport '../css/welcome.css';\n\nconst Loading = () => {\n    return (\n        <div className=\"loadingFull\">\n            <FontAwesomeIcon icon={faCoffee} size=\"lg\" pulse />\n        </div>\n    )\n}\n\nexport default Loading\n","import axios from \"axios\";\n\n//Production\nexport const signIn = async (email, password) =>{\n    try {\n        const response = await axios.post('https://tienditacafe.com/proveedores/api/login.php', \n            { \n                email: email,\n                pwd: password \n            }\n        );\n        if(response.data === 0){\n            return 'Email o contraseña incorrectos';\n        }else{\n            return response.data;\n        }\n    } catch (e) {\n        return `😱 Request failed: ${e}`;\n    }\n};\n\nexport const getUserProducts = async (userEmail) => {\n    try {\n        const response = await axios.post('https://tienditacafe.com/proveedores/api/getProductsUser.php', \n            { \n                email: userEmail\n            }\n        );\n        return response.data;\n    } catch (e) {\n        return `😱 Request failed: ${e}`;\n    }\n};\n\nexport const getCountries = async () =>{\n    try {\n        const response = await axios.post('https://tienditacafe.com/proveedores/api/getCountries.php');\n        return response.data;\n    } catch (e) {\n        return `😱 Request failed: ${e}`;\n    }\n};\n\nexport const getTypesProducts = async () =>{\n    try {\n        const response = await axios.post('https://tienditacafe.com/proveedores/api/getTypesProducts.php');\n        return response.data;\n    } catch (e) {\n        return `😱 Request failed: ${e}`;\n    }\n};\n\nexport const updateProducs = async (emailUser, name, description, descriptionLong, idCountry, price, quantity, idProduct, idProductType, acidezType, cuerpoType, saborType) =>{\n    try {\n        const response = await axios.post('https://tienditacafe.com/proveedores/api/updateProductsUser.php', \n            { \n                email: emailUser,\n                name: name,\n                description: description.replace(/\\n|\\r/g, \"\"),\n                long_description: descriptionLong.replace(/\\n|\\r/g, \"\"),\n                id_country: idCountry,\n                price: price,\n                quantity: quantity,\n                id_products: idProduct,\n                id_product_type: idProductType,\n                id_product_f_acidez_types: acidezType,\n                id_product_f_cuerpo_types: cuerpoType,\n                id_product_f_sabor_types: saborType,\n            }\n        );\n        return response.data;\n    } catch (e) {\n        return `😱 Request failed: ${e}`;\n    }\n};\n\nexport const newProduct = async (emailUser, name, description, idProductType, idCountry, descriptionLong, quantity, price, acidezType, cuerpoType, saborType) =>{\n    try {\n        const response = await axios.post('https://tienditacafe.com/proveedores/api/insertNewProduct.php', \n            { \n                email: emailUser,\n                name: name,\n                description: description.replace(/\\n|\\r/g, \"\"),\n                id_product_type: idProductType,\n                id_country: idCountry,\n                long_description: descriptionLong.replace(/\\n|\\r/g, \"\"),\n                quantity: quantity,\n                price: price,\n                id_product_f_acidez_types: acidezType,\n                id_product_f_cuerpo_types: cuerpoType,\n                id_product_f_sabor_types: saborType,\n            }\n        );\n        return response.data;\n    } catch (e) {\n        return `😱 Request failed: ${e}`;\n    }\n};\n\nexport const deactivateProduct = async (idProduct) =>{\n    try {\n        const response = await axios.post('https://tienditacafe.com/proveedores/api/deactivateProduct.php', \n            { \n                id_products: idProduct,\n            }\n        );\n        return response.data;\n    } catch (e) {\n        return `😱 Request failed: ${e}`;\n    }\n};\n\nexport const getProductImage = async (idProduct) =>{\n    try {\n        const response = await axios.post('https://tienditacafe.com/dashboard/user/getImage.php', \n            { \n                id_products: idProduct,\n            }\n        );\n        return response.data;\n    } catch (e) {\n        return `😱 Request failed: ${e}`;\n    }\n};\n\nexport const uploadFile = async (file) =>{\n    const formData = { \n        id_products: file,\n    }\n\n    formData.append('avatar',file)\n\n    return  await axios.post('https://tienditacafe.com/dashboard/user/uploadImage.php', formData,{\n        headers: {\n            'content-type': 'multipart/form-data'\n        }\n    });\n};\n\nexport const getCountUserProducts = async (userEmail) => {\n    try {\n        const response = await axios.post('https://tienditacafe.com/proveedores/api/getCountProductUser.php', \n            { \n                email: userEmail\n            }\n        );\n        return response.data;\n    } catch (e) {\n        return `😱 Request failed: ${e}`;\n    }\n};\n\nexport const getUserPacks = async (userEmail) => {\n    try {\n        const response = await axios.post('https://tienditacafe.com/proveedores/api/getPacksUser.php', \n            { \n                email: userEmail\n            }\n        );\n        return response.data;\n    } catch (e) {\n        return `😱 Request failed: ${e}`;\n    }\n};\n\nexport const newPack = async (emailUser, name, description, descriptionLong, quantity, price) =>{\n    try {\n        const response = await axios.post('https://tienditacafe.com/proveedores/api/insertPack.php', \n            { \n                email: emailUser,\n                name: name,\n                description: description.replace(/\\n|\\r/g, \"\"),\n                long_description: descriptionLong.replace(/\\n|\\r/g, \"\"),\n                quantity: quantity,\n                price: price,\n            }\n        );\n        return response.data;\n    } catch (e) {\n        return `😱 Request failed: ${e}`;\n    }\n};\n\nexport const newPackProductsIds = async (idProduct, idCampaign, quantity) =>{\n    try {\n        const response = await axios.post('https://tienditacafe.com/proveedores/api/insertPackProductsId.php', \n            { \n                id_products: idProduct,\n                id_campaign: idCampaign,\n                quantity: quantity,\n            }\n        );\n        return response.data;\n    } catch (e) {\n        return `😱 Request failed: ${e}`;\n    }\n};\n\nexport const getPacksUserProductsIds = async (idProduct) => {\n    try {\n        const response = await axios.post('https://tienditacafe.com/proveedores/api/getPacksUserProductsIds.php', \n            { \n                id_products: idProduct\n            }\n        );\n        return response.data;\n    } catch (e) {\n        return `😱 Request failed: ${e}`;\n    }\n};\n\nexport const updatePack = async (emailUser, idProduct, name, description, descriptionLong, quantity, price) =>{\n    try {\n        const response = await axios.post('https://tienditacafe.com/proveedores/api/updatePack.php', \n            { \n                email: emailUser,\n                id_products: idProduct,\n                name: name,\n                description: description.replace(/\\n|\\r/g, \"\"),\n                long_description: descriptionLong.replace(/\\n|\\r/g, \"\"),\n                quantity: quantity,\n                price: price,\n            }\n        );\n        return response.data;\n    } catch (e) {\n        return `😱 Request failed: ${e}`;\n    }\n};\n\nexport const updatePackProductsIds = async (idProduct, idCampaign, quantity) =>{\n    try {\n        const response = await axios.post('https://tienditacafe.com/proveedores/api/updatePackProductsId.php', \n            { \n                id_products: idProduct,\n                id_campaign: idCampaign,\n                quantity: quantity,\n            }\n        );\n        return response.data;\n    } catch (e) {\n        return `😱 Request failed: ${e}`;\n    }\n};\n\n//Testing\n/*export const signIn = async (email, password) =>{\n    try {\n        const response = await axios.post('http://localhost:8015/login.php', \n            { \n                email: email,\n                pwd: password \n            }\n        );\n        if(response.data === 0){\n            return 'Email o contraseña incorrectos';\n        }else{\n            return response.data;\n        }\n    } catch (e) {\n        return `😱 Request failed: ${e}`;\n    }\n};\n\nexport const getUserProducts = async (userEmail) => {\n    try {\n        const response = await axios.post('http://localhost:8015/getProductsUser.php', \n            { \n                email: userEmail\n            }\n        );\n        return response.data;\n    } catch (e) {\n        return `😱 Request failed: ${e}`;\n    }\n};\n\nexport const getCountries = async () =>{\n    try {\n        const response = await axios.post('http://localhost:8015/getCountries.php');\n        return response.data;\n    } catch (e) {\n        return `😱 Request failed: ${e}`;\n    }\n};\n\nexport const getTypesProducts = async () =>{\n    try {\n        const response = await axios.post('http://localhost:8015/getTypesProducts.php');\n        return response.data;\n    } catch (e) {\n        return `😱 Request failed: ${e}`;\n    }\n};\n\nexport const updateProducs = async (emailUser, name, description, descriptionLong, idCountry, price, quantity, idProduct, idProductType, acidezType, cuerpoType, saborType) =>{\n    try {\n        const response = await axios.post('http://localhost:8015/updateProductsUser.php', \n            { \n                email: emailUser,\n                name: name,\n                description: description.replace(/\\n|\\r/g, \"\"),\n                long_description: descriptionLong.replace(/\\n|\\r/g, \"\"),\n                id_country: idCountry,\n                price: price,\n                quantity: quantity,\n                id_products: idProduct,\n                id_product_type: idProductType,\n                id_product_f_acidez_types: acidezType,\n                id_product_f_cuerpo_types: cuerpoType,\n                id_product_f_sabor_types: saborType,\n            }\n        );\n        return response.data;\n    } catch (e) {\n        return `😱 Request failed: ${e}`;\n    }\n};\n\nexport const newProduct = async (emailUser, name, description, idProductType, idCountry, descriptionLong, quantity, price, acidezType, cuerpoType, saborType) =>{\n    try {\n        const response = await axios.post('http://localhost:8015/insertNewProduct.php', \n            { \n                email: emailUser,\n                name: name,\n                description: description.replace(/\\n|\\r/g, \"\"),\n                id_product_type: idProductType,\n                id_country: idCountry,\n                long_description: descriptionLong.replace(/\\n|\\r/g, \"\"),\n                quantity: quantity,\n                price: price,\n                id_product_f_acidez_types: acidezType,\n                id_product_f_cuerpo_types: cuerpoType,\n                id_product_f_sabor_types: saborType,\n            }\n        );\n        return response.data;\n    } catch (e) {\n        return `😱 Request failed: ${e}`;\n    }\n};\n\nexport const deactivateProduct = async (idProduct) =>{\n    try {\n        const response = await axios.post('http://localhost:8015/deactivateProduct.php', \n            { \n                id_products: idProduct,\n            }\n        );\n        return response.data;\n    } catch (e) {\n        return `😱 Request failed: ${e}`;\n    }\n};\n\nexport const getProductImage = async (idProduct) =>{\n    try {\n        const response = await axios.post('http://localhost:8016/dashboard/user/getImage.php', \n            { \n                id_products: idProduct,\n            }\n        );\n        return response.data;\n    } catch (e) {\n        return `😱 Request failed: ${e}`;\n    }\n};\n\nexport const uploadFile = async (file) =>{\n    const formData = { \n        id_products: file,\n    }\n\n    formData.append('avatar',file)\n\n    return  await axios.post('http://localhost:8016/dashboard/user/uploadImage.php', formData,{\n        headers: {\n            'content-type': 'multipart/form-data'\n        }\n    });\n};\n\nexport const getCountUserProducts = async (userEmail) => {\n    try {\n        const response = await axios.post('http://localhost:8015/getCountProductUser.php', \n            { \n                email: userEmail\n            }\n        );\n        return response.data;\n    } catch (e) {\n        return `😱 Request failed: ${e}`;\n    }\n};\n\nexport const getUserPacks = async (userEmail) => {\n    try {\n        const response = await axios.post('http://localhost:8015/getPacksUser.php', \n            { \n                email: userEmail\n            }\n        );\n        return response.data;\n    } catch (e) {\n        return `😱 Request failed: ${e}`;\n    }\n};\n\nexport const newPack = async (emailUser, name, description, descriptionLong, quantity, price) =>{\n    try {\n        const response = await axios.post('http://localhost:8015/insertPack.php', \n            { \n                email: emailUser,\n                name: name,\n                description: description.replace(/\\n|\\r/g, \"\"),\n                long_description: descriptionLong.replace(/\\n|\\r/g, \"\"),\n                quantity: quantity,\n                price: price,\n            }\n        );\n        return response.data;\n    } catch (e) {\n        return `😱 Request failed: ${e}`;\n    }\n};\n\nexport const newPackProductsIds = async (idProduct, idCampaign, quantity) =>{\n    try {\n        const response = await axios.post('http://localhost:8015/insertPackProductsId.php', \n            { \n                id_products: idProduct,\n                id_campaign: idCampaign,\n                quantity: quantity,\n            }\n        );\n        return response.data;\n    } catch (e) {\n        return `😱 Request failed: ${e}`;\n    }\n};\n\nexport const getPacksUserProductsIds = async (idProduct) => {\n    try {\n        const response = await axios.post('http://localhost:8015/getPacksUserProductsIds.php', \n            { \n                id_products: idProduct\n            }\n        );\n        return response.data;\n    } catch (e) {\n        return `😱 Request failed: ${e}`;\n    }\n};\n\nexport const updatePack = async (emailUser, idProduct, name, description, descriptionLong, quantity, price) =>{\n    try {\n        const response = await axios.post('http://localhost:8015/updatePack.php', \n            { \n                email: emailUser,\n                id_products: idProduct,\n                name: name,\n                description: description.replace(/\\n|\\r/g, \"\"),\n                long_description: descriptionLong.replace(/\\n|\\r/g, \"\"),\n                quantity: quantity,\n                price: price,\n            }\n        );\n        return response.data;\n    } catch (e) {\n        return `😱 Request failed: ${e}`;\n    }\n};\n\nexport const updatePackProductsIds = async (idProduct, idCampaign, quantity) =>{\n    try {\n        const response = await axios.post('http://localhost:8015/updatePackProductsId.php', \n            { \n                id_products: idProduct,\n                id_campaign: idCampaign,\n                quantity: quantity,\n            }\n        );\n        return response.data;\n    } catch (e) {\n        return `😱 Request failed: ${e}`;\n    }\n};*/","import React, {useEffect, useState} from 'react'\nimport Loading from '../../utilities/Loading';\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPencilAlt, faTrashAlt, faImage, faExclamationTriangle } from '@fortawesome/free-solid-svg-icons';\nimport { Modal, Button, Form, InputGroup } from 'react-bootstrap';\nimport { getUserProducts, getCountries, updateProducs, deactivateProduct, getProductImage, getTypesProducts, newProduct } from '../../api/functionApis';\n\nconst Products = () => {\n    const history = useHistory();\n    const [loading, setLoading] = useState(true);\n    const [products, setProducts] = useState([]);\n    const [countries, setCountries] = useState([]);\n    const [productTypes, setProductTypes] = useState([]);\n    const [noProducts, setNoProducts] = useState(true);\n\n    const [user, setUser] = useState('');\n    const [error, setError] = useState(false);\n    const [erroMessage, setErrorMessage] = useState('');\n\n    //EditModal\n    const [loadingEdit, setLoadingEdit] = useState(false);\n    const [showEdit, setShowEdit] = useState(false);\n    const [titleEdit, setTitleEdit] = useState('');\n    const [nameEdit, setNameEdit] = useState('');\n    const [descriptionEdit, setDescriptionEdit] = useState('');\n    const [descriptionLongEdit, setLongDescriptionEdit] = useState('');\n    const [idCountryEdit, setIdCountryEdit] = useState(0);\n    const [priceEdit, setPriceEdit] = useState('');\n    const [quantityEdit, setQuantityEdit] = useState(0);\n    const [idProductEdit, setIdProductEdit] = useState(0);\n    const [idProductTypeEdit, setIdProductTypeEdit] = useState(1);\n    const [productSaborEdit, setProductSaborEdit] = useState(0);\n    const [productCuerpoEdit, setProductCuerpoEdit] = useState(0);\n    const [productAcidezEdit, setProductAcidezEdit] = useState(0);\n\n    const [nameEditValidation, setNameEditValidation] = useState(false);\n    const [descriptionEditValidation, setDescriptionEditValidation] = useState(false);\n    const [descriptionLongEditValidation, setLongDescriptionEditValidation] = useState(false);\n    const [priceEditValidation, setPriceEditValidation] = useState(false);\n    const [quantityEditValidation, setQuantityEditValidation] = useState(false);\n\n    //NewModal\n    const [loadingNew, setLoadingNew] = useState(false);\n    const [formValidated, setFormValidated] = useState(false);\n    const [showNew, setShowNew] = useState(false);\n    const [titleNew, setTitleNew] = useState('Nuevo producto');\n    const [nameNew, setNameNew] = useState('');\n    const [descriptionNew, setDescriptionNew] = useState('');\n    const [descriptionLongNew, setLongDescriptionNew] = useState('');\n    const [idCountryNew, setIdCountryNew] = useState(0);\n    const [priceNew, setPriceNew] = useState('');\n    const [quantityNew, setQuantityNew] = useState(0);\n    const [idProductNew, setIdProductNew] = useState(0);\n    const [idProductTypeNew, setIdProductTypeNew] = useState(1);\n    const [productSaborNew, setProductSaborNew] = useState(0);\n    const [productCuerpoNew, setProductCuerpoNew] = useState(0);\n    const [productAcidezNew, setProductAcidezNew] = useState(0);\n    const [newProductItem, setNewProductItem] = useState([]);\n\n    const [nameNewValidation, setNameNewValidation] = useState(false);\n    const [descriptionNewValidation, setDescriptionNewValidation] = useState(false);\n    const [descriptionLongNewValidation, setLongDescriptionNewValidation] = useState(false);\n    const [priceNewValidation, setPriceNewValidation] = useState(false);\n    const [quantityNewValidation, setQuantityNewValidation] = useState(false);\n\n    //DeactivateModal\n    const [showCancel, setShowCancel] = useState(false);\n    const [idProductDelete, setIdProductDelete] = useState(0);\n\n    //ImageEditModal\n    const [showImage, setShowImage] = useState(false);\n    const [productImage, setProductImage] = useState('');\n    const [loadingImage, setLoadingImage] = useState(false);\n    const [image, setImage] = useState({ preview: \"\", raw: \"\" });\n    const [idProductImage, setIdProductImage] = useState(0);\n    const [errorImage, setErrorImage] = useState(false);\n    const [errorImageText, setErrorImageText] = useState('Error');\n\n    //ImageNewAlert\n    const [showAlertImgNew, setShowAlertImgNew] = useState(false);\n\n    const handleCloseNew = () => setShowNew(false);\n\n    const handleShowNew = () =>{\n        setNameNew('');\n        setDescriptionNew('');\n        setLongDescriptionNew('');\n        setPriceNew('');\n        setQuantityNew(0);\n        setLoadingNew(true);\n        setShowNew(true);\n        getCountries().then((x) => {\n            setCountries(x);\n            getTypesProducts().then((x) =>{\n                setProductTypes(x);\n            });\n        }).finally(() => {setLoadingNew(false)});\n    };\n\n    const validationNewForm = () => {\n        if(nameNew === ''){\n            setNameNewValidation(true);\n            setFormValidated(true);\n            return false;\n        }else{\n            setNameNewValidation(false);\n        }\n        if(descriptionNew === ''){\n            setDescriptionNewValidation(true);\n            setFormValidated(true);\n            return false;\n        }else{\n            setDescriptionNewValidation(false);\n        }\n        if(descriptionLongNew === ''){\n            setLongDescriptionNewValidation(true);\n            setFormValidated(true);\n            return false;\n        }else{\n            setLongDescriptionNewValidation(false);\n        }\n        if(priceNew === '' || priceNew == 0){\n            setPriceNewValidation(true);\n            setFormValidated(true);\n            return false;\n        }else{\n            setPriceNewValidation(false);\n        }\n        if(quantityNew === '' || quantityNew == 0){\n            setQuantityNewValidation(true);\n            setFormValidated(true);\n            return false;\n        }else{\n            setQuantityNewValidation(false);\n        }\n        setFormValidated(false);\n        return true;\n    };\n\n    const sendNewForm = () => {\n        if(validationNewForm()){\n            setShowNew(false);\n            setLoading(true);\n            newProduct(getUser(), nameNew, descriptionNew, idProductTypeNew, idCountryNew, descriptionLongNew, quantityNew, priceNew, productAcidezNew, productCuerpoNew, productSaborNew).then((x) =>{\n                getUserProducts(getUser()).then((x) => {\n                    if(x !== 'No results'){\n                        setNoProducts(false);\n                        setProducts(x);\n                    }else{\n                        setNoProducts(true);\n                    }\n                }).finally(() => {\n                    setLoading(false);\n                    setNewProductItem(x[0]);\n                    setShowAlertImgNew(true);\n                });\n            })\n        }\n    };\n\n    const handleCloseEdit = () => setShowEdit(false);\n\n    const handleShowEdit = (item) => {\n        setLoadingEdit(true);\n        setShowEdit(true);\n        getCountries().then((x) => {\n            setCountries(x);\n            setIdProductTypeEdit(item.id_product_type);\n            setProductSaborEdit(item.id_product_f_sabor_types);\n            setProductCuerpoEdit(item.id_product_f_cuerpo_types);\n            setProductAcidezEdit(item.id_product_f_acidez_types);\n            setIdCountryEdit(item.id_country);\n            setIdProductEdit(item.id_products);\n            setTitleEdit('#'+item.id_products+' '+'-'+' '+decode_utf8(item.name));\n            setNameEdit(decode_utf8(item.name));\n            setPriceEdit(item.price);\n            setQuantityEdit(item.quantity);\n            setDescriptionEdit(decode_utf8(item.description));\n            setLongDescriptionEdit(decode_utf8(item.long_description));\n            getTypesProducts().then((y) =>{\n                setProductTypes(y);\n            });\n        }).finally(() => {setLoadingEdit(false)});\n    };\n\n    const validationEditForm = () =>{\n        let rValue = false;\n        if(nameEdit === ''){\n            setNameEditValidation(true);\n            return false;\n        }else{\n            setNameEditValidation(false);\n        }\n        if(descriptionEdit === ''){\n            setDescriptionEditValidation(true);\n            return false;\n        }else{\n            setDescriptionEditValidation(false);\n        }\n        if(descriptionLongEdit === ''){\n            setLongDescriptionEditValidation(true);\n            return false;\n        }else{\n            setLongDescriptionEditValidation(false);\n        }\n        if(priceEdit === '' || priceEdit == 0){\n            setPriceEditValidation(true);\n            return false;\n        }else{\n            setPriceEditValidation(false);\n        }\n        if(quantityEdit === '' || quantityEdit == 0){\n            setQuantityEditValidation(true);\n            return false;\n        }else{\n            setQuantityEditValidation(false);\n        }\n        return true;\n    };\n\n    const sendEditForm = () =>{\n        if(validationEditForm()){\n            setShowEdit(false);\n            setLoading(true);\n            updateProducs(getUser(), nameEdit, descriptionEdit, descriptionLongEdit, idCountryEdit, priceEdit, quantityEdit, idProductEdit, idProductTypeEdit, productAcidezEdit, productCuerpoEdit, productSaborEdit).then(() => {\n                getUserProducts(getUser()).then((x) => {\n                    if(x !== 'No results'){\n                        setNoProducts(false);\n                        setProducts(x);\n                    }else{\n                        setNoProducts(true);\n                    }\n                }).finally(() => setLoading(false));\n            });\n        }\n    };\n\n    const handleShowEditImage = (item) =>{\n        setTitleEdit('#'+item.id_products+' '+'-'+' '+decode_utf8(item.name));\n        setImage({ preview: \"\", raw: \"\" });\n        setShowImage(true);\n        setLoadingImage(true);\n        setIdProductImage(item.id_products);\n        getProductImage(item.id_products).then((x) => setProductImage(x)).finally(() => setLoadingImage(false));\n    }\n\n    const handleCloseImgNew = () => setShowAlertImgNew(false);\n\n    const handleCloseImage = () => setShowImage(false);\n\n    const handleCloseCancel = () => setShowCancel(false);\n    \n    const handleShowCancel = (item) => {\n        setShowCancel(true);\n        setIdProductDelete(item.id_products);\n    };\n\n    const deleteProduct = () => {\n        setShowCancel(false);\n        setLoading(true);\n        deactivateProduct(idProductDelete).then(() => {\n            getUserProducts(getUser()).then((x) => {\n                if(x !== 'No results'){\n                    setNoProducts(false);\n                    setProducts(x);\n                }else{\n                    setNoProducts(true);\n                }\n            }).finally(() => setLoading(false));\n        });\n    };\n\n    const getUser = () =>{\n        const loggedInUser = localStorage.getItem(\"08191993\");\n        return loggedInUser;\n    };\n\n    const handleChangeImage = e => {\n        if (e.target.files.length) {\n          setImage({\n            preview: URL.createObjectURL(e.target.files[0]),\n            raw: e.target.files[0]\n          });\n        }\n    };\n\n    const handleUploadImage = async e => {\n        e.preventDefault();\n        setLoadingImage(true);\n        const formData = new FormData();\n        formData.append(\"avatar\", image.raw);\n        formData.append(\"id_products\", idProductImage);\n        \n        axios.post( 'https://tienditacafe.com/dashboard/user/uploadImage.php',\n          formData,\n          {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n          }\n        ).then(function(res){\n          //console.log('SUCCESS!!', res.data);\n          if(res.data.status == 1){\n            getUserProducts(getUser()).then((x) => setProducts(x)).finally(() => {\n                setLoadingImage(false);\n                setShowImage(false);\n            });\n          }else if(res.data.status == 2){\n            setLoadingImage(false);\n            setErrorImage(true);\n            setErrorImageText('Servicio actualmente no disponible');\n          }else if(res.data.status == 3){\n            setLoadingImage(false);\n            setErrorImage(true);\n            setErrorImageText('El tipo de archivo no es permitido');\n          }\n        })\n        .catch(function(){\n          console.log('FAILURE!!');\n        });\n    };\n\n    useEffect(() => {\n        getUserProducts(getUser()).then((x) => {\n            if(x !== 'No results'){\n                setNoProducts(false);\n                setProducts(x);\n            }else{\n                setNoProducts(true);\n            }\n        }).finally(() => setLoading(false));\n    }, []);\n\n    \n    function decode_utf8(s) {\n        return decodeURIComponent(escape(s));\n    }\n\n    const acidezTypes = (x) =>{\n        if(x == '5'){\n            return '5 - Acidez Alta'\n        }else if(x == '1'){\n            return '1 - Acidez muy baja'\n        }\n        return x;\n    };\n\n    return (\n        <div>\n            {loading ? \n            (<Loading></Loading>) : \n            (<div className=\"mt-3\">\n                <Modal \n                    show={showAlertImgNew} \n                    onHide={handleCloseImgNew} \n                    backdrop=\"static\" \n                    keyboard={false}>\n                    <Modal.Header closeButton>\n                     <Modal.Title>Para que el producto sea visible en TienditaCafe, necesitas incluir una imagen del producto.</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={handleCloseImgNew}>\n                            Despues\n                        </Button>\n                        <Button variant=\"primary\" onClick={() => {\n                            setShowAlertImgNew(false);\n                            handleShowEditImage(newProductItem);\n                        }}>\n                                Subir imagen\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n\n                <Modal\n                    show={showNew}\n                    size=\"lg\"\n                    onHide={handleCloseNew}\n                    backdrop=\"static\"\n                    keyboard={false}\n                >\n                    <Modal.Header closeButton>\n                                <Modal.Title>{titleNew}</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        {loadingNew ? (<Loading></Loading>) : \n                        (<Form>\n                            <Form.Group controlId=\"exampleForm.ControlInput1\">\n                                <Form.Label>Nombre del producto</Form.Label>\n                                <Form.Control required type=\"text\" placeholder=\"Cafe Nuevo, Taza nueva, etc.\" onChange={e => {setNameNew(e.target.value)}} />\n                                {nameNewValidation ? (<div class=\"alert alert-danger p-1\" role=\"alert\">Necesitas incluir un nombre</div>) : null}\n                            </Form.Group>\n                            <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                                <Form.Label>Tipo de producto</Form.Label>\n                                <Form.Control required as=\"select\" defaultValue=\"1\" onChange={e => {setIdProductTypeNew(e.target.value)}}>\n                                    <option value=\"1\">Bolsa</option>\n                                    <option value=\"2\">Accesorio</option>\n                                </Form.Control>\n                            </Form.Group>\n                            <Form.Group controlId=\"validationCustomUsername\">\n                                <Form.Label>Precio</Form.Label>\n                                <InputGroup hasValidation>\n                                    <InputGroup.Prepend>\n                                        <InputGroup.Text id=\"inputGroupPrepend\">$</InputGroup.Text>\n                                    </InputGroup.Prepend>\n                                    <Form.Control\n                                        required\n                                        placeholder=\"100\"\n                                        type=\"number\"\n                                        onChange={e => {setPriceNew(e.target.value)}}\n                                    />\n                                </InputGroup>\n                                {priceNewValidation ? (<div class=\"alert alert-danger p-1\" role=\"alert\">Necesitas incluir el precio mayor a 0</div>) : null}\n                            </Form.Group>\n                            <Form.Group controlId=\"exampleForm.ControlInput1\">\n                                <Form.Label>Stock</Form.Label>\n                                <Form.Control required type=\"number\" placeholder=\"300\" onChange={e => {setQuantityNew(e.target.value)}} />\n                                {quantityNewValidation ? (<div class=\"alert alert-danger p-1\" role=\"alert\">Necesitas incluir stock mayor a 0</div>) : null}\n                            </Form.Group>\n                            {idProductTypeNew == 1 ? \n                            (<>\n                                <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                                    <Form.Label>Cuerpo</Form.Label>\n                                    <Form.Control required as=\"select\" defaultValue={1} onChange={e => {setProductCuerpoNew(e.target.value)}}>\n                                        {productTypes.map((x) => {\n                                            if(Object.keys(x)[0] === \"id_product_f_cuerpo_types\"){\n                                                return (<option value={x.id_product_f_cuerpo_types} key={x.id_product_f_cuerpo_types}>{decode_utf8(x.value)}</option>);\n                                            }\n                                            \n                                        })}\n                                    </Form.Control>\n                                </Form.Group>\n                                <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                                    <Form.Label>Sabor</Form.Label>\n                                    <Form.Control required as=\"select\" defaultValue={1} onChange={e => {setProductSaborNew(e.target.value)}}>\n                                        {productTypes.map((x) => {\n                                            if(Object.keys(x)[0] === \"id_product_f_sabor_types\"){\n                                                return (<option value={x.id_product_f_sabor_types} key={x.id_product_f_sabor_types}>{decode_utf8(x.value)}</option>);\n                                            }\n                                        })}\n                                    </Form.Control>\n                                </Form.Group>\n                                <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                                    <Form.Label>Acidez</Form.Label>\n                                    <Form.Control required as=\"select\" defaultValue={1} onChange={e => {setProductAcidezNew(e.target.value)}}>\n                                        {productTypes.map((x) => {\n                                            if(Object.keys(x)[0] === \"id_product_f_acidez_types\"){\n                                                return (<option value={x.id_product_f_acidez_types} key={x.id_product_f_acidez_types}>\n                                                    {acidezTypes(x.value)}\n                                                    </option>);\n                                            }\n                                        })}\n                                    </Form.Control>\n                                </Form.Group>\n                                </>) \n                            : null}\n                            \n                            <Form.Group controlId=\"exampleForm.ControlInput1\">\n                                <Form.Label>Descripción corta del producto</Form.Label>\n                                <Form.Control required as=\"textarea\" placeholder=\"Descripcion corta donde se describa en menos de 30 caracteres tu producto\" rows={3} defaultValue={descriptionNew} onChange={e => {setDescriptionNew(e.target.value)}} />\n                                {descriptionNewValidation ? (<div class=\"alert alert-danger p-1\" role=\"alert\">Necesitas incluir una descripcion</div>) : null}\n                            </Form.Group>\n                            <Form.Group controlId=\"exampleForm.ControlInput1\">\n                                <Form.Label>Descripción larga del producto</Form.Label>\n                                <Form.Control required as=\"textarea\" rows={3} placeholder=\"Descripcion completa del producto\" defaultValue={descriptionLongNew} onChange={e => {setLongDescriptionNew(e.target.value)}} />\n                                {descriptionLongNewValidation ? (<div class=\"alert alert-danger p-1\" role=\"alert\">Necesitas incluir una descripcion mas amplia</div>) : null}\n                            </Form.Group>\n                            <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                                <Form.Label>Pais</Form.Label>\n                                <Form.Control required as=\"select\" defaultValue={1} onChange={e => {setIdCountryNew(e.target.value)}}>\n                                    {countries.map((x) => {\n                                        return (<option value={x.id_country} key={x.id_country}>{decode_utf8(x.country)}</option>);\n                                    })}\n                                </Form.Control>\n                            </Form.Group>\n                        </Form>)}\n                    </Modal.Body>\n                    <Modal.Footer>\n                        {formValidated ? (<div class=\"alert alert-danger p-1\" role=\"alert\">Necesitas completar todos los campos</div>) : null }\n                        <Button variant=\"secondary\" onClick={handleCloseNew}>\n                            Cancelar\n                        </Button>\n                        <Button variant=\"success\" onClick={() => sendNewForm()}>Guardar cambios</Button>\n                    </Modal.Footer>\n                </Modal>\n\n                <Modal\n                    show={showEdit}\n                    size=\"lg\"\n                    onHide={handleCloseEdit}\n                    backdrop=\"static\"\n                    keyboard={false}\n                >\n                    <Modal.Header closeButton>\n                                <Modal.Title>{titleEdit}</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        {loadingEdit ? (<Loading></Loading>) : \n                        (<Form>\n                            <Form.Group controlId=\"exampleForm.ControlInput1\">\n                                <Form.Label>Nombre del producto</Form.Label>\n                                <Form.Control required type=\"text\" defaultValue={nameEdit} onChange={e => {setNameEdit(e.target.value)}} />\n                                {nameEditValidation ? (<div class=\"alert alert-danger p-1\" role=\"alert\">Necesitas incluir un nombre</div>) : null}\n                            </Form.Group>\n                            <Form.Group controlId=\"validationCustomUsername\">\n                                <Form.Label>Precio</Form.Label>\n                                <InputGroup hasValidation>\n                                    <InputGroup.Prepend>\n                                        <InputGroup.Text id=\"inputGroupPrepend\">$</InputGroup.Text>\n                                    </InputGroup.Prepend>\n                                    <Form.Control\n                                        required\n                                        type=\"number\"\n                                        defaultValue={priceEdit}\n                                        onChange={e => {setPriceEdit(e.target.value)}}\n                                    />\n                                </InputGroup>\n                                {priceEditValidation ? (<div class=\"alert alert-danger p-1\" role=\"alert\">Necesitas incluir el precio mayor a 0</div>) : null}\n                            </Form.Group>\n                            <Form.Group controlId=\"exampleForm.ControlInput1\">\n                                <Form.Label>Stock</Form.Label>\n                                <Form.Control required type=\"number\" defaultValue={quantityEdit} onChange={e => {setQuantityEdit(e.target.value)}} />\n                                {quantityEditValidation ? (<div class=\"alert alert-danger p-1\" role=\"alert\">Necesitas incluir stock mayor a 0</div>) : null}\n                            </Form.Group>\n                            {idProductTypeEdit == 1 ? \n                            (<>\n                                <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                                    <Form.Label>Cuerpo</Form.Label>\n                                    <Form.Control required as=\"select\" onChange={e => {setProductCuerpoEdit(e.target.value)}}>\n                                        {productTypes.map((x) => {\n                                            if(Object.keys(x)[0] === \"id_product_f_cuerpo_types\"){\n                                                if(x.id_product_f_cuerpo_types === productCuerpoEdit){\n                                                    return (<option value={x.id_product_f_cuerpo_types} key={x.id_product_f_cuerpo_types} selected>{decode_utf8(x.value)}</option>);\n                                                }else{\n                                                    return (<option value={x.id_product_f_cuerpo_types} key={x.id_product_f_cuerpo_types}>{decode_utf8(x.value)}</option>);\n                                                }\n                                            }\n                                            \n                                        })}\n                                    </Form.Control>\n                                </Form.Group>\n                                <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                                    <Form.Label>Sabor</Form.Label>\n                                    <Form.Control required as=\"select\" onChange={e => {setProductSaborEdit(e.target.value)}}>\n                                        {productTypes.map((x) => {\n                                            if(Object.keys(x)[0] === \"id_product_f_sabor_types\"){\n                                                if(x.id_product_f_sabor_types === productSaborEdit){\n                                                    return (<option value={x.id_product_f_sabor_types} key={x.id_product_f_sabor_types} selected>{decode_utf8(x.value)}</option>);\n                                                }else{\n                                                    return (<option value={x.id_product_f_sabor_types} key={x.id_product_f_sabor_types}>{decode_utf8(x.value)}</option>);\n                                                }\n                                            }\n                                        })}\n                                    </Form.Control>\n                                </Form.Group>\n                                <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                                    <Form.Label>Acidez</Form.Label>\n                                    <Form.Control required as=\"select\" onChange={e => {setProductAcidezEdit(e.target.value)}}>\n                                        {productTypes.map((x) => {\n                                            if(Object.keys(x)[0] === \"id_product_f_acidez_types\"){\n                                                if(x.id_product_f_acidez_types === productAcidezEdit){\n                                                    return (<option value={x.id_product_f_acidez_types} key={x.id_product_f_acidez_types} selected>\n                                                        {acidezTypes(x.value)}\n                                                        </option>);\n                                                }else{\n                                                    return (<option value={x.id_product_f_acidez_types} key={x.id_product_f_acidez_types}>\n                                                        {acidezTypes(x.value)}\n                                                        </option>);\n                                                }\n                                            }\n                                        })}\n                                    </Form.Control>\n                                </Form.Group>\n                            </>) : null}\n                            <Form.Group controlId=\"exampleForm.ControlInput1\">\n                                <Form.Label>Descripción corta del producto</Form.Label>\n                                <Form.Control required as=\"textarea\" rows={3} defaultValue={descriptionEdit} onChange={e => {setDescriptionEdit(e.target.value)}} />\n                                {descriptionEditValidation ? (<div class=\"alert alert-danger p-1\" role=\"alert\">Necesitas incluir una descripcion</div>) : null}\n                            </Form.Group>\n                            <Form.Group controlId=\"exampleForm.ControlInput1\">\n                                <Form.Label>Descripción larga del producto</Form.Label>\n                                <Form.Control required as=\"textarea\" rows={3} defaultValue={descriptionLongEdit} onChange={e => {setLongDescriptionEdit(e.target.value)}} />\n                                {descriptionLongEditValidation ? (<div class=\"alert alert-danger p-1\" role=\"alert\">Necesitas incluir una descripcion mas amplia</div>) : null}\n                            </Form.Group>\n                            <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                                <Form.Label>Pais</Form.Label>\n                                <Form.Control required as=\"select\" defaultValue={idCountryEdit} onChange={e => {setIdCountryEdit(e.target.value)}}>\n                                    {countries.map((x) => {\n                                        return (<option value={x.id_country} key={x.id_country}>{decode_utf8(x.country)}</option>);\n                                    })}\n                                </Form.Control>\n                            </Form.Group>\n                        </Form>)}\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={handleCloseEdit}>\n                            Cancelar\n                        </Button>\n                        <Button variant=\"success\" onClick={() => sendEditForm()}>Guardar cambios</Button>\n                    </Modal.Footer>\n                </Modal>\n                \n                <Modal\n                    show={showCancel}\n                    size=\"lg\"\n                    onHide={handleCloseCancel}\n                    backdrop=\"static\"\n                    keyboard={false}\n                >\n                    <Modal.Header closeButton>\n                        <Modal.Title>¿Estas seguro?</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={handleCloseCancel}>\n                            Cancelar\n                        </Button>\n                    <Button variant=\"danger\" onClick={() => deleteProduct()}>Eliminar</Button>\n                    </Modal.Footer>\n                </Modal>\n\n                <Modal\n                    show={showImage}\n                    onHide={handleCloseImage}\n                    backdrop=\"static\"\n                    size=\"lg\"\n                    keyboard={false}\n                >\n                    <Modal.Header closeButton>\n                        <Modal.Title>{titleEdit}</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body className=\"mx-auto\">\n                        {loadingImage ? (<Loading></Loading>) \n                        : (<div className=\"card text-center\" style={{width: \"18rem\"}}>\n                            <label htmlFor=\"upload-button\">\n                              {image.preview ? (\n                                <img src={image.preview} alt={titleEdit} width=\"300\" height=\"300\" />\n                              ) : (\n                                <>\n                                  <img class=\"card-img-top\" src={productImage} alt={titleEdit} />\n                                  <h5 className=\"btn btn-primary\">Seleccionar nueva imagen</h5>\n                                  <p>Solo se permiten archivos jpg & png.</p>\n                                </>\n                              )}\n                            </label>\n                            <input\n                              type=\"file\"\n                              id=\"upload-button\"\n                              style={{ display: \"none\" }}\n                              onChange={handleChangeImage}\n                            />\n                            <br />\n                            {errorImage ? (<div class=\"alert alert-danger\" role=\"alert\">{errorImageText}</div>) : null}\n                            <button className=\"btn btn-success\" onClick={handleUploadImage}>Guardar cambios</button>\n                          </div>)}\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={handleCloseImage}>\n                            Cancelar\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n                {noProducts ? \n                (<div className=\"container loadingFull\">\n                    <div className=\"row text-center\">\n                        <div className=\"col-sm-12\"><h3>Aun no tienes productos</h3></div>\n                        <div className=\"col-sm-12\">\n                            <p>\n                                <button className=\"btn btn-outline-success\" onClick={() => handleShowNew()}>+ Añadir producto</button>\n                            </p>\n                        </div>\n                        \n                    </div>\n                </div>) : \n                (<>\n                <div className=\"container\">\n                    <div className=\"row\">\n                    \n                        <div className=\"col-sm-12\"><button className=\"btn btn-outline-success float-right\" onClick={() => handleShowNew()}>+ Nuevo producto</button></div>\n                        <div className=\"col-sm-12\">\n                            <table className=\"table\">\n                                <thead>\n                                    <tr>\n                                        <th scope=\"col\">id</th>\n                                        <th scope=\"col\">Titulo</th>\n                                        <th scope=\"col\">Precio</th>\n                                        <th scope=\"col\" className=\"text-center bg-dark text-white\">Stock</th>\n                                        <th scope=\"col\">Lugar</th>\n                                        <th scope=\"col\">Editar</th>\n                                        <th scope=\"col\">Imagen</th>\n                                        <th scope=\"col\">Eliminar</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                { products.map((item, index) => {\n                                    return(\n                                        <tr key={index} >\n                                            <th scope=\"row\">{item.active === 2 ? (<FontAwesomeIcon icon={faExclamationTriangle} className=\"text-warning\" />) : item.id_products}</th>\n                                            <td>{item.active === 2 ? decode_utf8(item.name)+' (Producto sin imagen)' : decode_utf8(item.name)}</td>\n                                            <td>$ {item.price}</td>\n                                            <td className=\"text-center bg-dark text-white\">{item.quantity === 0 ? (<span className=\"btn btn-warning btn-sm\">Agotado</span>) : item.quantity}</td>\n                                            <td>{decode_utf8(item.country)}</td>\n                                            <td>\n                                                <button className=\"btn btn-primary\" onClick={() => handleShowEdit(item)}>\n                                                    <FontAwesomeIcon icon={faPencilAlt} />\n                                                </button>\n                                            </td>\n                                            <td>\n                                                <button className=\"btn btn-success\" onClick={() => handleShowEditImage(item)}>\n                                                    <FontAwesomeIcon icon={faImage} />\n                                                </button>\n                                            </td>\n                                            <td>\n                                                <button className=\"btn btn-danger\" onClick={() => handleShowCancel(item)}>\n                                                    <FontAwesomeIcon icon={faTrashAlt} />\n                                                </button>\n                                            </td>\n                                        </tr>\n                                    );\n                                    })\n                                }      \n                                    \n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n                </>\n                )}\n                \n                    \n                    \n            </div>    \n            )}\n            \n        </div>\n    )\n}\n\nexport default Products\n","import React from 'react';\nimport { useHistory, Link } from \"react-router-dom\";\n\nconst Start = () => {\n    const history = useHistory();\n\n    const productsPage = () =>{\n        history.push(\"/bienvenido/productos\");\n    };\n\n    const packsPage = () =>{\n        history.push(\"/bienvenido/paquetes\");\n    };\n\n    return (\n        <div className=\"container loadingFull\">\n            <div className=\"row text-center\">\n                <div className=\"col-sm-12\"><h3>Bienvenido al portal de provedores</h3></div>\n                <div className=\"col-sm-12\">Aqui podras administrar tus productos y crear paquetes para vender de manera optima tus productos en TienditaCafe.</div>\n                <div className=\"col-sm-12\">\n                    <p>\n                        <small>Usa las pestañas de arriba para navegar.</small>\n                    </p>\n                </div>\n                \n            </div>\n        </div>\n    )\n}\n\nexport default Start\n","import React, {useState, useEffect} from 'react';\nimport Loading from '../../utilities/Loading';\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPencilAlt, faTrashAlt, faImage, faExclamationTriangle } from '@fortawesome/free-solid-svg-icons';\nimport { Modal, Button, Form, InputGroup, Row, Col } from 'react-bootstrap';\nimport { getUserPacks, getCountUserProducts, getUserProducts, newPack, newPackProductsIds, getProductImage, deactivateProduct, getPacksUserProductsIds, updatePack, updatePackProductsIds } from '../../api/functionApis';\n\nconst Packs = () => {\n    const [loading, setLoading] = useState(true);\n    const [noPacks, setNoPacks] = useState(true);\n    const [packs, setPacks] = useState([]);\n    const [productsCount, setProductsCount] = useState(false);\n    const [products, setProducts] = useState([]);\n    const [productsToAdd, setProductsToAdd] = useState([]);\n    const [titleModal, setTitleModal] = useState([]);\n\n    //NewPack\n    const [showNew, setShowNew] = useState(false);\n    const [loadingNew, setLoadingNew] = useState(false);\n    const [nameNew, setNameNew] = useState('');\n    const [priceNew, setPriceNew] = useState('');\n    const [descriptionNew, setDescriptionNew] = useState('');\n    const [longDescriptionNew, setLongDescriptionNew] = useState('');\n    const [productPack, setProductPack] = useState({});\n    const [quantityNew, setQuantityNew] = useState(0);\n    const [newPackItem, setNewPackItem] = useState([]);\n\n    const [formValidated, setFormValidated] = useState(false);\n    const [nameNewValidation, setNameNewValidation] = useState(false);\n    const [priceNewValidation, setPriceNewValidation] = useState(false);\n    const [descriptionNewValidation, setDescriptionNewValidation] = useState(false);\n    const [descriptionLongNewValidation, setDescriptionLongNewValidation] = useState(false);\n    const [quantityNewValidation, setQuantityNewValidation] = useState(false);\n    const [stockEmpty, setStockEmpty] = useState(false);\n\n    //ImgHandling\n    const [showAlertImgNew, setShowAlertImgNew] = useState(false);\n    const [image, setImage] = useState({ preview: \"\", raw: \"\" });\n    const [showImage, setShowImage] = useState(false);\n    const [loadingImage, setLoadingImage] = useState(false);\n    const [idProductImage, setIdProductImage] = useState(0);\n    const [productImage, setProductImage] = useState('');\n    const [errorImageText, setErrorImageText] = useState('Error');\n    const [errorImage, setErrorImage] = useState(false);\n\n    //DeactivateModal\n    const [showCancel, setShowCancel] = useState(false);\n    const [idProductDelete, setIdProductDelete] = useState(0);\n\n    //EditPack\n    const [showEdit, setShowEdit] = useState(false);\n    const [loadingEdit, setLoadingEdit] = useState(false);\n    const [nameEdit, setNameEdit] = useState('');\n    const [priceEdit, setPriceEdit] = useState('');\n    const [descriptionEdit, setDescriptionEdit] = useState('');\n    const [longDescriptionEdit, setLongDescriptionEdit] = useState('');\n    const [productPackEdit, setProductPackEdit] = useState({});\n    const [quantityEdit, setQuantityEdit] = useState(0);\n    const [idPack, setIdPack] = useState(0);\n\n    const [formValidatedEdit, setFormValidatedEdit] = useState(false);\n    const [nameEditValidation, setNameEditValidation] = useState(false);\n    const [priceEditValidation, setPriceEditValidation] = useState(false);\n    const [descriptionEditValidation, setDescriptionEditValidation] = useState(false);\n    const [descriptionLongEditValidation, setDescriptionLongEditValidation] = useState(false);\n    const [quantityEditValidation, setQuantityEditValidation] = useState(false);\n    const [stockEmptyEdit, setStockEmptyEdit] = useState(false);\n\n    const getUser = () =>{\n        const loggedInUser = localStorage.getItem(\"08191993\");\n        return loggedInUser;\n    };\n\n    const handleCloseImgNew = () => setShowAlertImgNew(false);\n\n    const handleShowEditImage = (item) =>{\n        setTitleModal('#'+item.id_products+' '+'-'+' '+decode_utf8(item.name));\n        setImage({ preview: \"\", raw: \"\" });\n        setShowImage(true);\n        setLoadingImage(true);\n        setIdProductImage(item.id_products);\n        getProductImage(item.id_products).then((x) => setProductImage(x)).finally(() => setLoadingImage(false));\n    }\n\n    const handleChangeImage = e => {\n        if (e.target.files.length) {\n          setImage({\n            preview: URL.createObjectURL(e.target.files[0]),\n            raw: e.target.files[0]\n          });\n        }\n    };\n\n    const handleUploadImage = async e => {\n        e.preventDefault();\n        setLoadingImage(true);\n        const formData = new FormData();\n        formData.append(\"avatar\", image.raw);\n        formData.append(\"id_products\", idProductImage);\n        \n        axios.post( 'https://tienditacafe.com/dashboard/user/uploadImage.php',\n          formData,\n          {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n          }\n        ).then(function(res){\n          //console.log('SUCCESS!!', res.data);\n          if(res.data.status == 1){\n            //setLoadingImage(false);\n            getUserPacks(getUser()).then((x) => {\n                if(x !== 'No results'){\n                    setNoPacks(false);\n                    setPacks(x);\n                }else{\n                    setNoPacks(true);\n                }\n            }).finally(() => {\n                setLoadingImage(false);\n                setShowImage(false);\n            });\n          }else if(res.data.status == 2){\n            setLoadingImage(false);\n            setErrorImage(true);\n            setErrorImageText('Servicio actualmente no disponible');\n          }else if(res.data.status == 3){\n            setLoadingImage(false);\n            setErrorImage(true);\n            setErrorImageText('El tipo de archivo no es permitido');\n          }\n        })\n        .catch(function(){\n          console.log('FAILURE!!');\n        });\n    };\n\n    const handleShowCancel = (item) => {\n        setShowCancel(true);\n        setIdProductDelete(item.id_products);\n    };\n\n    const deleteProduct = () => {\n        setShowCancel(false);\n        setLoading(true);\n        deactivateProduct(idProductDelete).then(() => {\n            getUserPacks(getUser()).then((x) => {\n                if(x !== 'No results'){\n                    setNoPacks(false);\n                    setPacks(x);\n                }else{\n                    setNoPacks(true);\n                }\n            }).finally(() => setLoading(false));\n        });\n    };\n\n    const handleShowEdit = (item) => {\n        setLoadingEdit(true);\n        setShowEdit(true);\n        getUserProducts(getUser()).then((y) =>{\n            setProducts(y);\n        }).then(() => {\n            getPacksUserProductsIds(item.id_products).then((x) =>{\n                let prdAdd = [];\n                for(let key in x){\n                    prdAdd.push({\n                        id_products: x[key].id_products,\n                        name: x[key].name,\n                        quantity: x[key].quantity,\n                        stock: x[key].stock,\n                    });\n                    \n                    setProducts((products) => {\n                        let prd = [];\n                        for(let keyy in products){\n                            if(products[keyy].id_products != x[key].id_products){\n                                prd.push(products[keyy]);\n                            }\n                        }\n                        return [...prd];\n                    });\n\n                }\n                setProductsToAdd(prdAdd);\n                setTitleModal('#'+item.id_products+' '+'-'+' '+decode_utf8(item.name));\n                setNameEdit(item.name);\n                setPriceEdit(item.price);\n                setQuantityEdit(item.quantity);\n                setDescriptionEdit(item.description);\n                setLongDescriptionEdit(item.long_description);\n                setIdPack(item.id_products);\n            });\n        }).finally(() => {\n            \n            setLoadingEdit(false);\n        });\n        \n        \n    };\n\n    const handleCloseEdit = () => setShowEdit(false);\n\n    const handleCloseCancel = () => setShowCancel(false);\n\n    const handleCloseImage = () => setShowImage(false);\n\n    const handleCloseNew = () => setShowNew(false);\n\n    const handleShowNew = () =>{\n        setNameNew('');\n        setPriceNew('');\n        setDescriptionNew('');\n        setLongDescriptionNew('');\n        setProducts([]);\n        setProductsToAdd([]);\n        setQuantityNew(0);\n        setShowNew(true);\n        setLoadingNew(true);\n        getUserProducts(getUser()).then((x) =>{\n            setProducts(x);\n        }).finally(() => setLoadingNew(false));\n\n    };\n\n    const validateEditForm = () =>{\n        if(nameEdit === ''){\n            setNameEditValidation(true);\n            setFormValidatedEdit(true);\n            return false;\n        }else{\n            setNameEditValidation(false);\n        }\n        if(priceEdit === '' && priceEdit <= 0){\n            setPriceEditValidation(true);\n            setFormValidatedEdit(true);\n            return false;\n        }else{\n            setPriceEditValidation(false);\n        }\n        if(quantityEdit === '' && quantityEdit <= 0){\n            setQuantityEditValidation(true);\n            setFormValidatedEdit(true);\n            return false;\n        }else{\n            setQuantityEditValidation(false);\n        }\n        if(descriptionEdit === ''){\n            setDescriptionEditValidation(true);\n            setFormValidatedEdit(true);\n            return false;\n        }else{\n            setDescriptionEditValidation(false);\n        }\n        if(longDescriptionEdit === ''){\n            setDescriptionLongEditValidation(true);\n            setFormValidatedEdit(true);\n            return false;\n        }else{\n            setDescriptionLongEditValidation(false);\n        }\n        if(!(productsToAdd.length >= 2)){\n            setFormValidatedEdit(true);\n            return false;\n        }\n        for(let key in productsToAdd){\n            if(productsToAdd[key].validated === true || productsToAdd[key].stock == 0){\n                setStockEmptyEdit(true);\n                setFormValidatedEdit(true);\n                return false;\n            }\n        }\n        setStockEmptyEdit(false);\n        setFormValidatedEdit(false);\n        return true;\n    };\n\n    const promisesProductsPackEdit = (idCampaign) =>{\n        let promises = [];\n        for(let key in productsToAdd){\n            promises.push(updatePackProductsIds(productsToAdd[key].id_products, idCampaign, productsToAdd[key].stock));\n        }\n        return promises;\n    };\n\n    const sendEditForm = () =>{\n        if(validateEditForm()){\n            setShowEdit(false);\n            setLoading(true);\n            updatePack(getUser(), idPack, nameEdit, descriptionEdit, longDescriptionEdit, quantityEdit, priceEdit).then((x) =>{\n                setNewPackItem(x[0]);\n                Promise.all(promisesProductsPack(idPack)).then(function (results) {\n                    getUserPacks(getUser()).then((x) => {\n                        if(x !== 'No results'){\n                            setNoPacks(false);\n                            setPacks(x);\n                        }else{\n                            setNoPacks(true);\n                        }\n                    }).finally(() => {\n                        setLoading(false);\n                    });\n                });\n            })\n        }\n    };\n\n    const validateNewForm = () =>{\n        if(nameNew === ''){\n            setNameNewValidation(true);\n            setFormValidated(true);\n            return false;\n        }else{\n            setNameNewValidation(false);\n        }\n        if(priceNew === '' && priceNew <= 0){\n            setPriceNewValidation(true);\n            setFormValidated(true);\n            return false;\n        }else{\n            setPriceNewValidation(false);\n        }\n        if(quantityNew === '' && quantityNew <= 0){\n            setQuantityNewValidation(true);\n            setFormValidated(true);\n            return false;\n        }else{\n            setQuantityNewValidation(false);\n        }\n        if(descriptionNew === ''){\n            setDescriptionNewValidation(true);\n            setFormValidated(true);\n            return false;\n        }else{\n            setDescriptionNewValidation(false);\n        }\n        if(longDescriptionNew === ''){\n            setDescriptionLongNewValidation(true);\n            setFormValidated(true);\n            return false;\n        }else{\n            setDescriptionLongNewValidation(false);\n        }\n        if(!(productsToAdd.length >= 2)){\n            setFormValidated(true);\n            return false;\n        }\n        for(let key in productsToAdd){\n            if(productsToAdd[key].validated === true || productsToAdd[key].stock == 0){\n                setStockEmpty(true);\n                setFormValidated(true);\n                return false;\n            }\n        }\n        setStockEmpty(false);\n        setFormValidated(false);\n        return true;\n    };\n\n    const promisesProductsPack = (idCampaign) =>{\n        let promises = [];\n        for(let key in productsToAdd){\n            promises.push(newPackProductsIds(productsToAdd[key].id_products, idCampaign, productsToAdd[key].stock));\n        }\n        return promises;\n    };\n\n    const sendNewForm = () =>{\n        if(validateNewForm()){\n            setShowNew(false);\n            setLoading(true);\n            newPack(getUser(), nameNew, descriptionNew, longDescriptionNew, quantityNew, priceNew).then((x) =>{\n                setNewPackItem(x[0]);\n                Promise.all(promisesProductsPack(x[0].id_products)).then(function (results) {\n                    for(let key in results){\n                        if(results[key] != 1){\n                            console.log(\"Error\");\n                        }\n                    }\n                    getUserPacks(getUser()).then((x) => {\n                        if(x !== 'No results'){\n                            setNoPacks(false);\n                            setPacks(x);\n                        }else{\n                            setNoPacks(true);\n                        }\n                    }).finally(() => {\n                        setLoading(false);\n                        setShowAlertImgNew(true);\n                    });\n                });\n            });\n        }\n    }\n\n    const validateQuantity = (value, idProduct, quantity) =>{\n        //setProducts([...products, prd]);\n        setProductsToAdd((productsToAdd) => {\n            let prd = productsToAdd;\n            for(let key in prd){\n                if(prd[key].id_products == idProduct){\n                    if(value > Number(prd[key].quantity)){\n                        prd[key].validated = true;\n                        prd[key].stock = 0;\n                    }else{\n                        prd[key].validated = false;\n                        prd[key].stock = value;\n                    }\n                }\n            }\n            return [...prd];\n        });\n        //console.log(productsToAdd);\n    };\n\n    const addProducts = (item) =>{\n        \n        let idProducts = item.split(\"|\")[0];\n        let name = (item.split(\"|\")[1]).split(\"/\")[0];\n        let quantity = (item.split(\"|\")[1]).split(\"/\")[1];\n        //console.log(\"id\", idProducts, \"name\", name, \"qty\", quantity);\n        setProductsToAdd([...productsToAdd, {\n            id_products: idProducts,\n            name: name,\n            quantity: quantity,\n            stock: 0,\n        }]);\n        setProducts((products) => {\n            let prd = [];\n            for(let key in products){\n                if(products[key].id_products != idProducts){\n                    prd.push(products[key]);\n                }\n            }\n            return [...prd];\n        });\n\n    };\n\n\n    useEffect(() => {\n        getUserPacks(getUser()).then((x) => {\n            if(x !== 'No results'){\n                setNoPacks(false);\n                setPacks(x);\n            }else{\n                setNoPacks(true);\n            }\n            getCountUserProducts(getUser()).then((y) =>{\n                if(y[0].count !== 0){\n                    setProductsCount(false);\n                }else{\n                    setProductsCount(true);\n                }\n            })\n        }).finally(() => setLoading(false));\n    }, []);\n\n    function decode_utf8(s) {\n        return decodeURIComponent(escape(s));\n    }\n\n    return (\n        <div>\n            <div className=\"mt-3\">\n                {loading ? (<Loading></Loading>) : \n                (\n                    <>\n                    <Modal\n                        show={showEdit}\n                        size=\"lg\"\n                        onHide={handleCloseEdit}\n                        backdrop=\"static\"\n                        keyboard={false}\n                    >\n                        <Modal.Header closeButton>\n                            <Modal.Title>{titleModal}</Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                            {loadingEdit ? (<Loading></Loading>) : \n                            (<Form>\n                                <Form.Group controlId=\"exampleForm.ControlInput1\">\n                                    <Form.Label>Nombre del paquete</Form.Label>\n                                    <Form.Control type=\"text\" placeholder=\"Paquete de primavera, Paquete especial\" value={nameEdit} onChange={e => {setNameEdit(e.target.value)}} />\n                                    {nameEditValidation ? (<div class=\"alert alert-danger p-1\" role=\"alert\">Necesitas incluir un nombre</div>) : null}\n                                </Form.Group>\n                                <Form.Group controlId=\"validationCustomUsername\">\n                                    <Form.Label>Precio</Form.Label>\n                                    <InputGroup hasValidation>\n                                        <InputGroup.Prepend>\n                                            <InputGroup.Text id=\"inputGroupPrepend\">$</InputGroup.Text>\n                                        </InputGroup.Prepend>\n                                        <Form.Control\n                                            placeholder=\"100\"\n                                            value={priceEdit}\n                                            type=\"number\"\n                                            onChange={e => {setPriceEdit(e.target.value)}}\n                                        />\n                                    </InputGroup>\n                                    {priceEditValidation ? (<div class=\"alert alert-danger p-1\" role=\"alert\">Necesitas incluir el precio mayor a 0</div>) : null}\n                                </Form.Group>\n                                <Form.Group controlId=\"exampleForm.ControlInput1\">\n                                    <Form.Label>Stock del paquete</Form.Label>\n                                    <Form.Control required type=\"number\" placeholder=\"10\" value={quantityEdit} onChange={e => {setQuantityEdit(e.target.value)}} />\n                                    {quantityEditValidation ? (<div class=\"alert alert-danger p-1\" role=\"alert\">Necesitas incluir stock mayor a 0</div>) : null}\n                                </Form.Group>\n                                <Form.Group controlId=\"exampleForm.ControlInput1\">\n                                    <Form.Label>Descripción corta del paquete</Form.Label>\n                                    <Form.Control as=\"textarea\" placeholder=\"Descripcion corta donde se describa en menos de 30 caracteres tu paquete\" value={descriptionEdit} rows={3} onChange={e => {setDescriptionEdit(e.target.value)}} />\n                                    {descriptionEditValidation ? (<div class=\"alert alert-danger p-1\" role=\"alert\">Necesitas incluir una descripcion</div>) : null}\n                                </Form.Group>\n                                <Form.Group controlId=\"exampleForm.ControlInput1\">\n                                    <Form.Label>Descripción larga del producto</Form.Label>\n                                    <Form.Control as=\"textarea\" rows={3} placeholder=\"Descripcion completa del paquete\" value={longDescriptionEdit} onChange={e => {setLongDescriptionEdit(e.target.value)}} />\n                                    {descriptionLongEditValidation ? (<div class=\"alert alert-danger p-1\" role=\"alert\">Necesitas incluir una descripcion mas amplia</div>) : null}\n                                </Form.Group>\n                                <Form.Group controlId=\"exampleForm.ControlInput1\">\n                                    <Form.Label>Incluir productos</Form.Label>\n                                    <div className=\"container\">\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-4\">\n                                                <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                                                    <Form.Control required as=\"select\" onChange={e => {\n                                                        //console.log(e.target.value);\n                                                        setProductPackEdit(e.target.value);\n                                                    }}>\n                                                        <option value={0}>Selecciona un producto...</option>\n                                                        {products.map((x) => {\n                                                            return (<option value={x.id_products+'|'+decode_utf8(x.name)+'/'+x.quantity} key={x.id_products}>{decode_utf8(x.name)}</option>);\n                                                        })}\n                                                    </Form.Control>\n                                                    \n                                                </Form.Group>\n                                                <button type=\"button\" className=\"btn btn-primary btn-sm\" onClick={() => addProducts(productPackEdit)}>Añadir</button>\n                                            </div>\n                                            <div className=\"col-sm-2\"></div>\n                                            <div className=\"col-sm-6\">\n                                                <Form.Group as={Row} controlId=\"formPlaintextEmail\">\n                                                    <Col sm=\"7\">\n                                                        <b>Producto</b>\n                                                    </Col>\n                                                    <Col sm=\"5\">\n                                                        <b>Cantidad</b>\n                                                    </Col>\n                                                </Form.Group>\n                                                {productsToAdd.map((x, index) => {\n                                                    //console.log(x);\n                                                    return (<div key={index}><Form.Group as={Row} controlId=\"formPlaintextEmail\">\n                                                        <Col sm=\"7\">\n                                                            {decode_utf8(x.name)}\n                                                        </Col>\n                                                        <Col sm=\"5\">\n                                                            <Form.Control type=\"number\" placeholder={x.quantity} max={x.quantity} value={x.stock} onChange={e => {validateQuantity(e.target.value, x.id_products, x.quantity)}} />\n                                                            {x.validated ? (<div class=\"alert alert-warning\" role=\"alert\">La cantidad no puede ser mayor al stock</div>) : null}\n                                                        </Col>\n                                                    </Form.Group></div>);\n                                                })}\n                                                {stockEmptyEdit ? (<div class=\"alert alert-warning\" role=\"alert\">Te faltan campos</div>) : null}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </Form.Group>\n                               \n                            </Form>)}\n                        </Modal.Body>\n                        <Modal.Footer>\n                            {formValidatedEdit ? (<div class=\"alert alert-danger p-1\" role=\"alert\">Necesitas completar todos los campos</div>) : null }\n                            {productsToAdd.length >= 2 ? null : (<div class=\"alert alert-danger p-1\" role=\"alert\">Necesitas agregar mas de dos productos</div>) }\n                            <Button variant=\"secondary\" onClick={handleCloseEdit}>\n                                Cancelar\n                            </Button>\n                            <Button variant=\"success\" onClick={() => sendEditForm()}>Guardar cambios</Button>\n                        </Modal.Footer>\n                    </Modal>\n\n                    <Modal\n                        show={showCancel}\n                        size=\"lg\"\n                        onHide={handleCloseCancel}\n                        backdrop=\"static\"\n                        keyboard={false}\n                    >\n                        <Modal.Header closeButton>\n                            <Modal.Title>¿Estas seguro?</Modal.Title>\n                        </Modal.Header>\n                        <Modal.Footer>\n                            <Button variant=\"secondary\" onClick={handleCloseCancel}>\n                                Cancelar\n                            </Button>\n                        <Button variant=\"danger\" onClick={() => deleteProduct()}>Eliminar</Button>\n                        </Modal.Footer>\n                    </Modal>\n\n                    <Modal\n                        show={showImage}\n                        onHide={handleCloseImage}\n                        backdrop=\"static\"\n                        size=\"lg\"\n                        keyboard={false}\n                    >\n                        <Modal.Header closeButton>\n                            <Modal.Title>{titleModal}</Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body className=\"mx-auto\">\n                            {loadingImage ? (<Loading></Loading>) \n                            : (<div className=\"card text-center\" style={{width: \"18rem\"}}>\n                                <label htmlFor=\"upload-button\">\n                                {image.preview ? (\n                                    <img src={image.preview} alt={titleModal} width=\"300\" height=\"300\" />\n                                ) : (\n                                    <>\n                                    <img class=\"card-img-top\" src={productImage} alt={titleModal} />\n                                    <h5 className=\"btn btn-primary\">Seleccionar nueva imagen</h5>\n                                    <p>Solo se permiten archivos jpg & png.</p>\n                                    </>\n                                )}\n                                </label>\n                                <input\n                                type=\"file\"\n                                id=\"upload-button\"\n                                style={{ display: \"none\" }}\n                                onChange={handleChangeImage}\n                                />\n                                <br />\n                                {errorImage ? (<div class=\"alert alert-danger\" role=\"alert\">{errorImageText}</div>) : null}\n                                <button className=\"btn btn-success\" onClick={handleUploadImage}>Guardar cambios</button>\n                            </div>)}\n                        </Modal.Body>\n                        <Modal.Footer>\n                            <Button variant=\"secondary\" onClick={handleCloseImage}>\n                                Cancelar\n                            </Button>\n                        </Modal.Footer>\n                    </Modal>\n\n                    <Modal \n                        show={showAlertImgNew} \n                        onHide={handleCloseImgNew} \n                        backdrop=\"static\" \n                        keyboard={false}>\n                        <Modal.Header closeButton>\n                        <Modal.Title>Para que el paquete sea visible en TienditaCafe, necesitas incluir una imagen del conjunto.</Modal.Title>\n                        </Modal.Header>\n                        <Modal.Footer>\n                            <Button variant=\"secondary\" onClick={handleCloseImgNew}>\n                                Despues\n                            </Button>\n                            <Button variant=\"primary\" onClick={() => {\n                                setShowAlertImgNew(false);\n                                handleShowEditImage(newPackItem);\n                            }}>\n                                    Subir imagen\n                            </Button>\n                        </Modal.Footer>\n                    </Modal>\n\n                    <Modal\n                        show={showNew}\n                        size=\"lg\"\n                        onHide={handleCloseNew}\n                        backdrop=\"static\"\n                        keyboard={false}\n                    >\n                        <Modal.Header closeButton>\n                                    <Modal.Title>Nuevo paquete</Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                            {loadingNew ? (<Loading></Loading>) : \n                            (<Form>\n                                <Form.Group controlId=\"exampleForm.ControlInput1\">\n                                    <Form.Label>Nombre del paquete</Form.Label>\n                                    <Form.Control type=\"text\" placeholder=\"Paquete de primavera, Paquete especial\" onChange={e => {setNameNew(e.target.value)}} />\n                                    {nameNewValidation ? (<div class=\"alert alert-danger p-1\" role=\"alert\">Necesitas incluir un nombre</div>) : null}\n                                </Form.Group>\n                                <Form.Group controlId=\"validationCustomUsername\">\n                                    <Form.Label>Precio</Form.Label>\n                                    <InputGroup hasValidation>\n                                        <InputGroup.Prepend>\n                                            <InputGroup.Text id=\"inputGroupPrepend\">$</InputGroup.Text>\n                                        </InputGroup.Prepend>\n                                        <Form.Control\n                                            placeholder=\"100\"\n                                            type=\"number\"\n                                            onChange={e => {setPriceNew(e.target.value)}}\n                                        />\n                                    </InputGroup>\n                                    {priceNewValidation ? (<div class=\"alert alert-danger p-1\" role=\"alert\">Necesitas incluir el precio mayor a 0</div>) : null}\n                                </Form.Group>\n                                <Form.Group controlId=\"exampleForm.ControlInput1\">\n                                    <Form.Label>Stock del paquete</Form.Label>\n                                    <Form.Control required type=\"number\" placeholder=\"10\" onChange={e => {setQuantityNew(e.target.value)}} />\n                                    {quantityNewValidation ? (<div class=\"alert alert-danger p-1\" role=\"alert\">Necesitas incluir stock mayor a 0</div>) : null}\n                                </Form.Group>\n                                <Form.Group controlId=\"exampleForm.ControlInput1\">\n                                    <Form.Label>Descripción corta del paquete</Form.Label>\n                                    <Form.Control as=\"textarea\" placeholder=\"Descripcion corta donde se describa en menos de 30 caracteres tu paquete\" rows={3} onChange={e => {setDescriptionNew(e.target.value)}} />\n                                    {descriptionNewValidation ? (<div class=\"alert alert-danger p-1\" role=\"alert\">Necesitas incluir una descripcion</div>) : null}\n                                </Form.Group>\n                                <Form.Group controlId=\"exampleForm.ControlInput1\">\n                                    <Form.Label>Descripción larga del producto</Form.Label>\n                                    <Form.Control as=\"textarea\" rows={3} placeholder=\"Descripcion completa del paquete\" onChange={e => {setLongDescriptionNew(e.target.value)}} />\n                                    {descriptionLongNewValidation ? (<div class=\"alert alert-danger p-1\" role=\"alert\">Necesitas incluir una descripcion mas amplia</div>) : null}\n                                </Form.Group>\n                                <Form.Group controlId=\"exampleForm.ControlInput1\">\n                                    <Form.Label>Incluir productos</Form.Label>\n                                    <div className=\"container\">\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-4\">\n                                                <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                                                    <Form.Control required as=\"select\" onChange={e => {\n                                                        //console.log(e.target.value);\n                                                        setProductPack(e.target.value);\n                                                    }}>\n                                                        <option value={0}>Selecciona un producto...</option>\n                                                        {products.map((x) => {\n                                                            return (<option value={x.id_products+'|'+decode_utf8(x.name)+'/'+x.quantity} key={x.id_products}>{decode_utf8(x.name)}</option>);\n                                                        })}\n                                                    </Form.Control>\n                                                    \n                                                </Form.Group>\n                                                <button type=\"button\" className=\"btn btn-primary btn-sm\" onClick={() => addProducts(productPack)}>Añadir</button>\n                                            </div>\n                                            <div className=\"col-sm-2\"></div>\n                                            <div className=\"col-sm-6\">\n                                                <Form.Group as={Row} controlId=\"formPlaintextEmail\">\n                                                    <Col sm=\"7\">\n                                                        <b>Producto</b>\n                                                    </Col>\n                                                    <Col sm=\"5\">\n                                                        <b>Cantidad</b>\n                                                    </Col>\n                                                </Form.Group>\n                                                {productsToAdd.map((x, index) => {\n                                                    //console.log(x);\n                                                    return (<div key={index}><Form.Group as={Row} controlId=\"formPlaintextEmail\">\n                                                        <Col sm=\"7\">\n                                                            {x.name}\n                                                        </Col>\n                                                        <Col sm=\"5\">\n                                                            <Form.Control type=\"number\" placeholder={x.quantity} max={x.quantity} onChange={e => {validateQuantity(e.target.value, x.id_products, x.quantity)}} />\n                                                            {x.validated ? (<div class=\"alert alert-warning\" role=\"alert\">La cantidad no puede ser mayor al stock</div>) : null}\n                                                        </Col>\n                                                    </Form.Group></div>);\n                                                })}\n                                                {stockEmpty ? (<div class=\"alert alert-warning\" role=\"alert\">Te faltan campos</div>) : null}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </Form.Group>\n                               \n                            </Form>)}\n                        </Modal.Body>\n                        <Modal.Footer>\n                            {formValidated ? (<div class=\"alert alert-danger p-1\" role=\"alert\">Necesitas completar todos los campos</div>) : null }\n                            {productsToAdd.length >= 2 ? null : (<div class=\"alert alert-danger p-1\" role=\"alert\">Necesitas agregar mas de dos productos</div>) }\n                            <Button variant=\"secondary\" onClick={handleCloseNew}>\n                                Cancelar\n                            </Button>\n                            <Button variant=\"success\" onClick={() => sendNewForm()}>Guardar cambios</Button>\n                        </Modal.Footer>\n                    </Modal>\n                    {noPacks ? (<div className=\"container loadingFull\">\n                        <div className=\"row text-center\">\n                            <div className=\"col-sm-12\"><h3>En esta seccion podras crear paquetes de tus propios productos e incrementar tus ventas</h3></div>\n                            <div className=\"col-sm-12\">\n                                <p>\n                                    {productsCount ? (<span className=\"btn btn-warning\">No puedes añadir paquetes sin productos activos</span>) : \n                                    (<button className=\"btn btn-outline-success\" onClick={() => handleShowNew()}>+ Añadir paquete</button>)}\n                                </p>\n                            </div>\n                        </div>\n                    </div>) : \n                    (<div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-sm-12\"><button className=\"btn btn-outline-success float-right\" onClick={() => handleShowNew()}>+ Nuevo paquete</button></div>\n                            <div className=\"col-sm-12\">\n                                <table className=\"table\">\n                                    <thead>\n                                        <tr>\n                                            <th scope=\"col\">id</th>\n                                            <th scope=\"col\">Titulo</th>\n                                            <th scope=\"col\">Precio</th>\n                                            <th scope=\"col\" className=\"text-center bg-dark text-white\">Stock</th>\n                                            <th scope=\"col\">Editar</th>\n                                            <th scope=\"col\">Imagen</th>\n                                            <th scope=\"col\">Eliminar</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                    { packs.map((item, index) => {\n                                        return(\n                                            <tr key={index} >\n                                                <th scope=\"row\">{item.active === 2 ? (<FontAwesomeIcon icon={faExclamationTriangle} className=\"text-warning\" />) : item.id_products}</th>\n                                                <td>{item.active === 2 ? decode_utf8(item.name)+' (Producto sin imagen)' : decode_utf8(item.name)}</td>\n                                                <td>$ {item.price}</td>\n                                                <td className=\"text-center bg-dark text-white\">{item.quantity === 0 ? (<span className=\"btn btn-warning btn-sm\">Agotado</span>) : item.quantity}</td>\n                                                <td>\n                                                    <button className=\"btn btn-primary\" onClick={() => handleShowEdit(item)}>\n                                                        <FontAwesomeIcon icon={faPencilAlt} />\n                                                    </button>\n                                                </td>\n                                                <td>\n                                                    <button className=\"btn btn-success\" onClick={() => handleShowEditImage(item)}>\n                                                        <FontAwesomeIcon icon={faImage} />\n                                                    </button>\n                                                </td>\n                                                <td>\n                                                    <button className=\"btn btn-danger\" onClick={() => handleShowCancel(item)}>\n                                                        <FontAwesomeIcon icon={faTrashAlt} />\n                                                    </button>\n                                                </td>\n                                            </tr>\n                                        );\n                                        })\n                                    }      \n                                        \n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                    </div>)}\n                    </>\n                    \n                )}\n                \n            </div>\n        </div>\n    )\n}\n\nexport default Packs\n","import React, {useEffect, useState} from 'react';\nimport '../../css/welcome.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPowerOff, faTools } from '@fortawesome/free-solid-svg-icons';\nimport { useHistory, BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Logo from '../../resources/images/logo.png';\nimport axios from \"axios\";\nimport Products from './Products';\nimport StartPage from './Start';\nimport Packs from './Packs';\nimport Start from './Start';\nimport Loading from '../../utilities/Loading';\n\nconst Welcome = () => {\n    const history = useHistory();\n    const [user, setUser] = useState('');\n    const [fullName, setFullName] = useState('');\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n    const [errorMessage, setErrorMessage] = useState('');\n\n    const getUser = async () =>{\n        setLoading(true);\n        const loggedInUser = localStorage.getItem(\"08191993\");\n        if (!loggedInUser) {\n            history.push(\"/\");\n        }\n        return loggedInUser;\n    };\n\n    const getUserData = async () => {\n        try {\n            const response = await axios.post('https://tienditacafe.com/proveedores/api/getUserData.php', \n                { \n                    email: user\n                }\n            );\n            return response.data;\n        } catch (e) {\n            setLoading(false);\n            setError(true);\n            setErrorMessage(`😱 Request failed: ${e}`);\n            console.log(`😱 Request failed: ${e}`);\n        }\n    };\n\n    const logout = () => {\n        localStorage.clear();\n        history.push(\"/\");\n    };\n\n    const startPage = () =>{\n        console.log(\"start\");\n    };\n\n    const productsPage = () =>{\n        console.log(\"products\");\n    };\n\n    const packsPage = () =>{\n        console.log(\"packs\");\n    };\n\n    useEffect(() => {\n        getUser().then((x) => setUser(x)).finally(() => {            \n            getUserData().then((x) => {\n                if(x !== undefined){\n                    const name = x[0].name+' '+x[0].last_name\n                    setFullName(name);\n                }else{\n                    setError(true);\n                    setErrorMessage(\"Por el momento nuestros servicios se encuentran en mantenimiento, vuelve despues.\");\n                }\n                \n            }).finally(() => setLoading(false));\n        });\n    }, [fullName]);\n\n    if(error){\n        return (\n            <div className=\"container loadingFull\">\n                <div className=\"row text-center\">\n                    <div className=\"col-sm-12\"><h3><FontAwesomeIcon icon={faTools} size=\"lg\" /></h3></div>\n                    <div className=\"col-sm-12\"><h3>{errorMessage}</h3></div>\n                </div>\n            </div>\n        )\n    }else{\n        return (        \n            <div>\n                {loading ? (\n                    <Loading></Loading>\n                ) : \n                (<div>\n                    <nav className=\"navbar navbar-expand-lg navbar-light bg-light fixed-top\">\n                        <img src={Logo} className=\"img-fluid\" alt=\"Responsive image\" width=\"150\"></img>\n                        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                            <span className=\"navbar-toggler-icon\"></span>\n                        </button>\n    \n                        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                            <ul className=\"navbar-nav ml-auto\">\n                                <li className=\"nav-item active\">\n                                    <Link to=\"/bienvenido/\">\n                                        <button className=\"nav-link btn btn-link\">Inicio</button>\n                                    </Link>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <Link to=\"/bienvenido/productos\">\n                                        <button className=\"nav-link btn btn-link\">Productos</button>\n                                    </Link>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <Link to=\"/bienvenido/paquetes\">\n                                        <button className=\"nav-link btn btn-link\">Paquetes</button>\n                                    </Link>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <a className=\"nav-link disabled\" href=\"#\">|</a>\n                                </li>\n                            </ul>\n                            <div className=\"my-4 my-lg-0\">\n                                <div className=\"container\">\n                                    <div className=\"row h-100 justify-content-center align-items-center\">\n                                        <div className=\"col-sm-12\">{fullName}</div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\" my-4 my-lg-0\">\n                                <button className=\"btn btn-outline-dark\" data-toggle=\"tooltip\" onClick={() => logout()} data-placement=\"bottom\" title=\"Cerrar sesion\">\n                                    <FontAwesomeIcon icon={faPowerOff} />\n                                </button>\n                            </div>\n                        </div>\n                    </nav>   \n                    <div style={{minHeight: '51.5rem', paddingTop: '3.5rem'}}>           \n                        <Switch>\n                            <Route path=\"/bienvenido/productos\">\n                                <Products></Products>\n                            </Route>\n                            <Router path=\"/bienvenido/paquetes\">\n                                <Packs></Packs>\n                            </Router>\n                            <Router path=\"/bienvenido/\">\n                                <StartPage></StartPage>\n                            </Router>\n                        </Switch>\n                    </div>  \n                </div>\n                )\n                }\n                \n            </div>\n        )\n\n    }\n\n    \n}\n\nexport default Welcome\n","import logo from './logo.svg';\nimport './App.css';\nimport Login from './components/Login';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport Welcome from './components/content/Welcome';\n\nfunction App() {\n  document.title = \"TienditaCafe | Proveedores\"\n  return (\n    <Router basename=\"/proveedores\">\n      <Switch>\n        <Route exact path='/' component={Login} />\n        <Route path=\"/bienvenido\" component={Welcome} />\n      </Switch>    \n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}